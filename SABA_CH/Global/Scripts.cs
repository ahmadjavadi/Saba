using SABA_CH.DataBase;
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Text;
using System.Threading.Tasks;

namespace SABA_CH.Global
{
    public class Scripts
    {
        public string[] scripts = new string[100];
        public string[] WaterConsumption303Scripts = new string[6];

        public Scripts()
        {
            #region Old 
            scripts[0] = "update OBISValueHeader set ReadDate = REPLACE(ReadDate, '00:00 ق.ظ', '00:00:00'),  TransferDate = REPLACE(TransferDate, ' ق.ظ', ':00') ";
            scripts[1] = "update ConsumedWater set  DateOfReceivedFromSource= REPLACE(DateOfReceivedFromSource, ' ق.ظ', '')";
            scripts[2] = "UPDATE  SourceType  SET  SourceTypeName ='HhuPC'  where  SourceTypeName ='SABAPC'    UPDATE  Translate SET  ObjectDesc =replace (ObjectDesc,'SABAPC','HHU PC') WHERE   (ObjectDesc LIKE '%SABAPC%')   UPDATE token SET   \tStartDateTime = convert(datetime, StartDateTime, 104),   \tEndDateTime = convert(datetime, EndDateTime, 104)    FROM token   WHERE StartDateTime   LIKE '%.%' AND StartDateTime NOT LIKE '%ق%' AND StartDateTime NOT LIKE '%ب%'        update Token   set StartDateTime=   CONVERT(VARCHAR(30), cast (RTRIM (REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(Replace(  SubString (StartDateTime,1,len(StartDateTime)- CHARINDEX(':',REVERSE(StartDateTime)) +7)  ,CHAR(200),'PM'),'000',''),'.',''),'.',''),CHAR(46),''),CHAR(222),''),'AM','')) as dateTime)\t, 120 )         update token   set EndDateTime=  CONVERT(VARCHAR(30), cast (RTRIM (REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(Replace(  SubString (enddateTime,1,len(enddateTime)- CHARINDEX(':',REVERSE(enddateTime)) +7)  ,CHAR(200),'PM'),'000',''),'.',''),'.',''),CHAR(46),''),CHAR(222),''),'AM','')) as dateTime)\t, 120 )       update token   set BuildDate=  CONVERT(VARCHAR(30), cast (RTRIM (REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(Replace(  SubString (BuildDate,1,len(BuildDate)- CHARINDEX(':',REVERSE(BuildDate)) +7)  ,CHAR(200),'PM'),'000',''),'.',''),'.',''),CHAR(46),''),CHAR(222),''),'AM','')) as dateTime)\t, 120 )";
            scripts[3] = "ALTER proc [dbo].[ShowToken]  @Filter   Nvarchar(max),  @LanguageID   Decimal(18,0) =2  as  set FMTonly off  Exec(  '    Declare @LangID   int  set @LangID='+@LanguageID+'  select   TokenID,  USBDeviceCode,  UserID,  ComPuterCode,  SequenceNumber,  Token,  BuildDate,  CardID,  Hash,  MeterID,  CreditTransferModes,    credit_Capability_Activation,  creditStartDate,  disconnectivity_On_Negative_Credit,  disconnectivity_On_Expired_Credit,  StartDateTime,    EndDateTime,  CreditValue,  USBSignature,  OBISValueHeaderID  INTO #TempToken  From Token     Select  ISNULL(Main.TokenID,0)TokenID,  ISNULL(Main.CreditValue,0)CreditValue,  case When   @LangID=2 then  ISNULL(dbo.PubMiladiToShamsi(BuildDate),'''')  else  ISNULL(Main.BuildDate,'''')  end as BuildDate,  ISNULL(Main.CreditTransferModes,0)CreditTransferModes,  case when @LangID=2  and substring(Meter.MeterNumber,1,3)!=''207'' then  ISNULL(dbo.PubMiladiToShamsi(CAST(SubString(StartDateTime,1,18)  AS datetime )),'''')   when @LangID!=2  and substring(Meter.MeterNumber,1,3)!=''207'' then  ISNULL(Main.StartDateTime,'''')   when substring(Meter.MeterNumber,1,3)=''207'' then  ''-''  end  StartDate,  case when @LangID=2 then  ISNULL(dbo.PubMiladiToShamsi(CAST(SUBSTRING(EndDateTime,1,18) AS datetime )),'''')  else  ISNULL(substring(Main.EndDateTime,1,10),'''')  end  EndDate,  ISNULL(Main.MeterID,0)MeterID,  ISNULL(Main.UserID,0)UserID,  ISNULL(Users.UserName,'''')UserName,  Isnull(Customers.customername,'''')+'' ''+Isnull(Customers.Customerfamily,'''') CustomerName,  Isnull(Customers.WatersubscriptionNumber,'''')WatersubscriptionNumber,  Isnull(Customers.DossierNumber,'''')DossierNumber,  Isnull(Customers.NationalCode,0)NationalCode,  CAST(substring(EndDateTime,1,18) AS time )endTime,  CAST(substring(StartDateTime,1,18) AS time )StartTime  ,ISNULL(Det.Value,'''')CardNumber,  ISNULL(Meter.MeterNumber,'''')MeterNumber,    ISNULL(credit_Capability_Activation,0)credit_Capability_Activation,  ISNULL(creditStartDate,'''')creditStartDate,  ISNULL(disconnectivity_On_Negative_Credit,0)disconnectivity_On_Negative_Credit,  ISNULL(disconnectivity_On_Expired_Credit,0)disconnectivity_On_Expired_Credit        From #TempToken Main  Inner Join Meter on Meter.MeterID=Main.MeterID  Inner Join Users on Users.UserID=Main.UserID  left Join Customers on Customers.CustomerID=Meter.CustomerID  inner Join OBISValueHeader on OBISValueHeader.OBISValueHeaderID=Main.OBISValueHeaderID  inner Join OBISValueDetail Det on Det.OBISValueHeaderID=OBISValueHeader.OBISValueHeaderID  inner Join OBISS on OBISS.OBISID=Det.OBISID and Obis=''FF02''  Where 1=1   '+@Filter  +  '  Drop Table #TempToken'  )";

            //[ShowAllCreditTokenWithNecessary]
            //scripts[4] = "ALTER proc [dbo].[ShowAllCreditTokenWithNecessary]  @FromDate\tNvarchar(50),  @ToDate\t\tNvarchar(50),  @UserID\t   Decimal(18,0),  @GroupID   Decimal(18,0),  @GroupType  Decimal(18,0),  @IsNecessary\tbit,  @WithCredit\t\tbit,  @Type\t\t\tbit,  @LanguageID   Decimal(18,0) =2  as  if(@Type=1)  begin   declare @UpNumber int,       @DownNumber int         if(@IsNecessary=1)   begin    set @UpNumber =71    set @DownNumber=55  end  else    begin  set @DownNumber=0   set @UpNumber=56  end     if(@GroupID !=0)   begin   select distinct   ISNULL(Meter.MeterID,0) MeterID,   ISNULL(Meter.MeterNumber,0) MeterNumber,  ISNULL(Convert(Nvarchar ,max(Cast(OBISValueDetail.Value as decimal(18,2)))),'')Value ,   Token.CreditValue,   ISNULL(token.tokenid,0) TokenID,   ISNULL(Customers.WatersubscriptionNumber,'')WatersubscriptionNumber,   Isnull(Customers.customername,'')+' '+Isnull(Customers.Customerfamily,'') CustomerName,   ISNULL(Token.CreditTransferModes,'')CreditTransferModes,   ISNULL(credit_Capability_Activation,0)credit_Capability_Activation,   ISNULL(creditStartDate,'')creditStartDate,   ISNULL(disconnectivity_On_Negative_Credit,0)disconnectivity_On_Negative_Credit,   ISNULL(disconnectivity_On_Expired_Credit,0)disconnectivity_On_Expired_Credit     from Meter    left join Customers on Customers.CustomerID=Meter.CustomerID    inner join OBISValueHeader on OBISValueHeader.MeterID=Meter.MeterID   inner join Token on Token.MeterID=Meter.MeterID   inner join OBISValueDetail on OBISValueDetail.OBISValueHeaderID=OBISValueHeader.OBISValueHeaderID   inner join OBISS on OBISS.OBISID=OBISValueDetail.OBISID      where Meter.MeterID  in (select distinct MeterID from Token where convert(datetime,BuildDate) between @FromDate and  @ToDate)    and obiss.OBISID=83 and OBISS.Obis='0802010000ff'     and ((@IsNecessary=1 and SUBSTRING(Meter.MeterNumber,1,3)!='207') )      and Meter.MeterID In(Select MeterID From MeterToGroup where MeterToGroup.GroupID=@GroupID and MeterToGroup.GroupType=@GroupType)    and Meter.MeterID In(Select MeterID From AccessUserToMeter  where AccessUserToMeter.UserID= @UserID )    and (@DownNumber<CAST(CONVERT(VARBINARY(1),substring(Token.CreditTransferModes,2,1)) AS INT)     and CAST(CONVERT(VARBINARY(1),upper(substring(Token.CreditTransferModes,2,1))) AS INT)<@UpNumber)         group by token.MeterID,meter.MeterID,MeterNumber,token.CreditValue,Token.TokenID,Token.CreditTransferModes,  Token.credit_Capability_Activation,  Token.creditStartDate,Token.disconnectivity_On_Negative_Credit,Token.disconnectivity_On_Expired_Credit,Customers.WatersubscriptionNumber  ,Customers.CustomerName,Customers.Customerfamily           union All     select distinct   ISNULL(Meter.MeterID,0) MeterID,   ISNULL(Meter.MeterNumber,0) MeterNumber,  ISNULL(Convert(Nvarchar ,max(Cast(OBISValueDetail.Value as decimal(18,2)))),'')Value ,   Token.CreditValue,   ISNULL(token.tokenid,0) TokenID,   ISNULL(Customers.WatersubscriptionNumber,'')WatersubscriptionNumber,   Isnull(Customers.customername,'')+' '+Isnull(Customers.Customerfamily,'') CustomerName,   ISNULL(Token.CreditTransferModes,'')CreditTransferModes,   ISNULL(credit_Capability_Activation,0)credit_Capability_Activation,   ISNULL(creditStartDate,'')creditStartDate,   ISNULL(disconnectivity_On_Negative_Credit,0)disconnectivity_On_Negative_Credit,   ISNULL(disconnectivity_On_Expired_Credit,0)disconnectivity_On_Expired_Credit     from Meter    left join Customers on Customers.CustomerID=Meter.CustomerID    inner join OBISValueHeader on OBISValueHeader.MeterID=Meter.MeterID    inner join Token on Token.MeterID=Meter.MeterID   inner join OBISValueDetail on OBISValueDetail.OBISValueHeaderID=OBISValueHeader.OBISValueHeaderID   inner join OBISS on OBISS.OBISID=OBISValueDetail.OBISID      where Meter.MeterID  in (select distinct MeterID from Token where convert(datetime,BuildDate) between @FromDate and  @ToDate)    and obiss.OBISID=83 and OBISS.Obis='0802010000ff'       and ((@IsNecessary=0 and SUBSTRING(Meter.MeterNumber,1,3)!='207') )      and Meter.MeterID In(Select MeterID From MeterToGroup where MeterToGroup.GroupID=@GroupID and MeterToGroup.GroupType=@GroupType)    and Meter.MeterID In(Select MeterID From AccessUserToMeter  where AccessUserToMeter.UserID= @UserID )     and (@DownNumber<CAST(CONVERT(VARBINARY(1),UPPER (substring(Token.CreditTransferModes,2,1))) AS INT)      and CAST(CONVERT(VARBINARY(1),UPPER (substring(Token.CreditTransferModes,2,1))) AS INT)<@UpNumber)     group by token.MeterID,meter.MeterID,MeterNumber,token.CreditValue,Token.TokenID,Token.CreditTransferModes,  Token.credit_Capability_Activation,  Token.creditStartDate,Token.disconnectivity_On_Negative_Credit,Token.disconnectivity_On_Expired_Credit,Customers.WatersubscriptionNumber  ,Customers.CustomerName,Customers.Customerfamily           union All     select distinct   ISNULL(Meter.MeterID,0) MeterID,   ISNULL(Meter.MeterNumber,0) MeterNumber,  ISNULL(Convert(Nvarchar ,max(Cast(OBISValueDetail.Value as decimal(18,2)))),'')Value ,   Token.CreditValue,   ISNULL(token.tokenid,0) TokenID,   ISNULL(Customers.WatersubscriptionNumber,'')WatersubscriptionNumber,   Isnull(Customers.customername,'')+' '+Isnull(Customers.Customerfamily,'') CustomerName,   ISNULL(Token.CreditTransferModes,'')CreditTransferModes,   ISNULL(credit_Capability_Activation,0)credit_Capability_Activation,   ISNULL(creditStartDate,'')creditStartDate,   ISNULL(disconnectivity_On_Negative_Credit,0)disconnectivity_On_Negative_Credit,   ISNULL(disconnectivity_On_Expired_Credit,0)disconnectivity_On_Expired_Credit     from Meter    left join Customers on Customers.CustomerID=Meter.CustomerID    inner join OBISValueHeader on OBISValueHeader.MeterID=Meter.MeterID    inner join Token on Token.MeterID=Meter.MeterID   inner join OBISValueDetail on OBISValueDetail.OBISValueHeaderID=OBISValueHeader.OBISValueHeaderID   inner join OBISS on OBISS.OBISID=OBISValueDetail.OBISID      where Meter.MeterID  in (select distinct MeterID from Token where convert(datetime,BuildDate) between @FromDate and  @ToDate)    and obiss.OBISID=83 and OBISS.Obis='0802010000ff'       and ((@IsNecessary=0 and SUBSTRING(Meter.MeterNumber,1,3)='207') )      and Meter.MeterID In(Select MeterID From MeterToGroup where MeterToGroup.GroupID=@GroupID and MeterToGroup.GroupType=@GroupType)    and Meter.MeterID In(Select MeterID From AccessUserToMeter  where AccessUserToMeter.UserID= @UserID )                   group by token.MeterID,meter.MeterID,MeterNumber,token.CreditValue,Token.TokenID,Token.CreditTransferModes,  Token.credit_Capability_Activation,  Token.creditStartDate,Token.disconnectivity_On_Negative_Credit,Token.disconnectivity_On_Expired_Credit,Customers.WatersubscriptionNumber  ,Customers.CustomerName,Customers.Customerfamily    order by MeterId               end    else if(@GroupID=0)    begin   select distinct   ISNULL(Meter.MeterID,0) MeterID,   ISNULL(Meter.MeterNumber,0) MeterNumber,  ISNULL(Convert(Nvarchar ,max(Cast(OBISValueDetail.Value as decimal(18,2)))),'')Value ,   Token.CreditValue,   ISNULL(token.tokenid,0) TokenID,   ISNULL(Customers.WatersubscriptionNumber,'')WatersubscriptionNumber,   Isnull(Customers.customername,'')+' '+Isnull(Customers.Customerfamily,'') CustomerName,   ISNULL(Token.CreditTransferModes,'')CreditTransferModes,   ISNULL(credit_Capability_Activation,0)credit_Capability_Activation,   ISNULL(creditStartDate,'')creditStartDate,   ISNULL(disconnectivity_On_Negative_Credit,0)disconnectivity_On_Negative_Credit,   ISNULL(disconnectivity_On_Expired_Credit,0)disconnectivity_On_Expired_Credit     from Meter    left join Customers on Customers.CustomerID=Meter.CustomerID    inner join OBISValueHeader on OBISValueHeader.MeterID=Meter.MeterID    inner join Token on Token.MeterID=Meter.MeterID   inner join OBISValueDetail on OBISValueDetail.OBISValueHeaderID=OBISValueHeader.OBISValueHeaderID   inner join OBISS on OBISS.OBISID=OBISValueDetail.OBISID      where Meter.MeterID not in (select distinct MeterID from Token where convert(datetime,BuildDate) between @FromDate and  @ToDate)    and obiss.OBISID=83 and OBISS.Obis='0802010000ff'     and (@IsNecessary=1 and SUBSTRING(Meter.MeterNumber,1,3)!='207')      and Meter.MeterID In(Select MeterID From AccessUserToMeter  where AccessUserToMeter.UserID= @UserID  )    and (@DownNumber< CAST(CONVERT(VARBINARY(1),upper(substring(Token.CreditTransferModes,2,1))) AS INT)    and CAST(CONVERT(VARBINARY(1),upper(substring(Token.CreditTransferModes,2,1))) AS INT)<@UpNumber)       group by token.MeterID,meter.MeterID,MeterNumber,token.CreditValue,Token.TokenID,Token.CreditTransferModes,  Token.credit_Capability_Activation,  Token.creditStartDate,Token.disconnectivity_On_Negative_Credit,Token.disconnectivity_On_Expired_Credit,Customers.WatersubscriptionNumber  ,Customers.CustomerName,Customers.Customerfamily       Union ALL    select distinct   ISNULL(Meter.MeterID,0) MeterID,   ISNULL(Meter.MeterNumber,0) MeterNumber,  ISNULL(Convert(Nvarchar ,max(Cast(OBISValueDetail.Value as decimal(18,2)))),'')Value ,   Token.CreditValue,   ISNULL(token.tokenid,0) TokenID,   ISNULL(Customers.WatersubscriptionNumber,'')WatersubscriptionNumber,   Isnull(Customers.customername,'')+' '+Isnull(Customers.Customerfamily,'') CustomerName,   ISNULL(Token.CreditTransferModes,'')CreditTransferModes,   ISNULL(credit_Capability_Activation,0)credit_Capability_Activation,   ISNULL(creditStartDate,'')creditStartDate,   ISNULL(disconnectivity_On_Negative_Credit,0)disconnectivity_On_Negative_Credit,   ISNULL(disconnectivity_On_Expired_Credit,0)disconnectivity_On_Expired_Credit     from Meter    left join Customers on Customers.CustomerID=Meter.CustomerID    inner join OBISValueHeader on OBISValueHeader.MeterID=Meter.MeterID   inner join Token on Token.MeterID=Meter.MeterID   inner join OBISValueDetail on OBISValueDetail.OBISValueHeaderID=OBISValueHeader.OBISValueHeaderID   inner join OBISS on OBISS.OBISID=OBISValueDetail.OBISID      where Meter.MeterID not in (select distinct MeterID from Token where convert(datetime,BuildDate) between @FromDate and  @ToDate)    and obiss.OBISID=83 and OBISS.Obis='0802010000ff'     and (@IsNecessary=0 and SUBSTRING(Meter.MeterNumber,1,3)='207')     and Meter.MeterID In(Select MeterID From AccessUserToMeter  where AccessUserToMeter.UserID= @UserID  )               group by token.MeterID,meter.MeterID,MeterNumber,token.CreditValue,Token.TokenID,Token.CreditTransferModes,  Token.credit_Capability_Activation,  Token.creditStartDate,Token.disconnectivity_On_Negative_Credit,Token.disconnectivity_On_Expired_Credit,Customers.WatersubscriptionNumber  ,Customers.CustomerName,Customers.Customerfamily         Union ALL    select distinct   ISNULL(Meter.MeterID,0) MeterID,   ISNULL(Meter.MeterNumber,0) MeterNumber,  ISNULL(Convert(Nvarchar ,max(Cast(OBISValueDetail.Value as decimal(18,2)))),'')Value ,   Token.CreditValue,   ISNULL(token.tokenid,0) TokenID,   ISNULL(Customers.WatersubscriptionNumber,'')WatersubscriptionNumber,   Isnull(Customers.customername,'')+' '+Isnull(Customers.Customerfamily,'') CustomerName,   ISNULL(Token.CreditTransferModes,'')CreditTransferModes,   ISNULL(credit_Capability_Activation,0)credit_Capability_Activation,   ISNULL(creditStartDate,'')creditStartDate,   ISNULL(disconnectivity_On_Negative_Credit,0)disconnectivity_On_Negative_Credit,   ISNULL(disconnectivity_On_Expired_Credit,0)disconnectivity_On_Expired_Credit     from Meter    left join Customers on Customers.CustomerID=Meter.CustomerID    inner join OBISValueHeader on OBISValueHeader.MeterID=Meter.MeterID   inner join Token on Token.MeterID=Meter.MeterID   inner join OBISValueDetail on OBISValueDetail.OBISValueHeaderID=OBISValueHeader.OBISValueHeaderID   inner join OBISS on OBISS.OBISID=OBISValueDetail.OBISID      where Meter.MeterID not in (select distinct MeterID from Token where convert(datetime,BuildDate) between @FromDate and  @ToDate)    and obiss.OBISID=83 and OBISS.Obis='0802010000ff'     and (@IsNecessary=0 and SUBSTRING(Meter.MeterNumber,1,3)<>'207')     and Meter.MeterID In(Select MeterID From AccessUserToMeter  where AccessUserToMeter.UserID= @UserID  )    and (@DownNumber<CAST(CONVERT(VARBINARY(1),upper(substring(Token.CreditTransferModes,2,1))) AS INT)     and CAST(CONVERT(VARBINARY(1),upper(substring(Token.CreditTransferModes,2,1))) AS INT)<@UpNumber)    group by token.MeterID,meter.MeterID,MeterNumber,token.CreditValue,Token.TokenID,Token.CreditTransferModes,  Token.credit_Capability_Activation,  Token.creditStartDate,Token.disconnectivity_On_Negative_Credit,Token.disconnectivity_On_Expired_Credit,Customers.WatersubscriptionNumber  ,Customers.CustomerName,Customers.Customerfamily    order by MeterId      end    end       else if(@Type=0)   begin   if (@WithCredit =0 and @GroupID !=0)   begin  select  distinct  ISNULL(Meter.MeterID,0) MeterID,  ISNULL(Meter.MeterNumber,0) MeterNumber,  ISNULL(Convert(Nvarchar ,max(Cast(OBISValueDetail.Value as decimal(18,2)))),'')Value ,  Token.CreditValue,  ISNULL(Token.TokenID,0)as TokenID,   ISNULL(Customers.WatersubscriptionNumber,'')WatersubscriptionNumber,   Isnull(Customers.customername,'')+' '+Isnull(Customers.Customerfamily,'') CustomerName,   ISNULL(Token.CreditTransferModes,'')CreditTransferModes,   ISNULL(credit_Capability_Activation,0)credit_Capability_Activation,   ISNULL(creditStartDate,'')creditStartDate,   ISNULL(disconnectivity_On_Negative_Credit,0)disconnectivity_On_Negative_Credit,   ISNULL(disconnectivity_On_Expired_Credit,0)disconnectivity_On_Expired_Credit   from Meter    left join Customers on Customers.CustomerID=Meter.CustomerID    inner join OBISValueHeader on OBISValueHeader.MeterID=Meter.MeterID    inner join Token on Token.MeterID=Meter.MeterID   inner join OBISValueDetail on OBISValueDetail.OBISValueHeaderID=OBISValueHeader.OBISValueHeaderID   inner join OBISS on OBISS.OBISID=OBISValueDetail.OBISID        where Meter.MeterID not in (select distinct MeterID from Token where convert(datetime,BuildDate) between @FromDate and  @ToDate )    and obiss.OBISID=83 and OBISS.Obis='0802010000ff'    and Meter.MeterID In(Select MeterID From MeterToGroup where MeterToGroup.GroupID=@GroupID and MeterToGroup.GroupType=@GroupType)    and Meter.MeterID In(Select MeterID From AccessUserToMeter  where AccessUserToMeter.UserID= @UserID )         group by token.MeterID,meter.MeterID,MeterNumber,token.CreditValue,Token.TokenID,Token.CreditTransferModes,  Token.credit_Capability_Activation,  Token.creditStartDate,Token.disconnectivity_On_Negative_Credit,Token.disconnectivity_On_Expired_Credit,Customers.WatersubscriptionNumber  ,Customers.CustomerName,Customers.Customerfamily            union All    select distinct    ISNULL(Meter.MeterID,0) MeterID,    ISNULL(Meter.MeterNumber,0) MeterNumber,  ISNULL(Convert(Nvarchar ,max(Cast(OBISValueDetail.Value as decimal(18,2)))),'')Value ,    0,    0,    ISNULL(Customers.WatersubscriptionNumber,'')WatersubscriptionNumber,    Isnull(Customers.customername,'')+' '+Isnull(Customers.Customerfamily,'') CustomerName,    '',    0,    '',    0,    0    from Meter          left join Customers on Customers.CustomerID=Meter.CustomerID    inner join OBISValueHeader on OBISValueHeader.MeterID=Meter.MeterID   inner join OBISValueDetail on OBISValueDetail.OBISValueHeaderID=OBISValueHeader.OBISValueHeaderID   inner join OBISS on OBISS.OBISID=OBISValueDetail.OBISID      where     obiss.OBISID=83 and OBISS.Obis='0802010000ff'    and Meter.MeterID not in(select distinct MeterID from Token where convert(datetime,BuildDate) between @FromDate and  @ToDate )    and Meter.MeterID In(Select MeterID From MeterToGroup where MeterToGroup.GroupID=@GroupID and MeterToGroup.GroupType=@GroupType )    and Meter.MeterID In(Select MeterID From AccessUserToMeter  where AccessUserToMeter.UserID= @UserID  )         group by meter.MeterID,MeterNumber,Customers.WatersubscriptionNumber  ,Customers.CustomerName,Customers.Customerfamily            Union All    select distinct    ISNULL(Meter.MeterID,0) MeterID,    ISNULL(Meter.MeterNumber,0) MeterNumber,    '0',    0,    0,    '',    Isnull(Customers.customername,'')+' '+Isnull(Customers.Customerfamily,'') CustomerName,    '',    0,    '',    0,    0    from Meter       left join Customers on Customers.CustomerID=Meter.CustomerID     where     Meter.MeterID not in(select distinct MeterID from Token where convert(datetime,BuildDate) between @FromDate and  @ToDate )    and Meter.MeterID In(Select MeterID From MeterToGroup where MeterToGroup.GroupID=@GroupID and MeterToGroup.GroupType=@GroupType )    and Meter.MeterID In(Select MeterID From AccessUserToMeter  where AccessUserToMeter.UserID= @UserID  )          group by meter.MeterID,MeterNumber,Customers.WatersubscriptionNumber  ,Customers.CustomerName,Customers.Customerfamily    order by MeterId       end   else if(@GroupID !=0)   begin   select distinct   ISNULL(Meter.MeterID,0) MeterID,   ISNULL(Meter.MeterNumber,0) MeterNumber,  ISNULL(Convert(Nvarchar ,max(Cast(OBISValueDetail.Value as decimal(18,2)))),'')Value ,   Token.CreditValue,   ISNULL(token.tokenid,0) TokenID,   ISNULL(Customers.WatersubscriptionNumber,'')WatersubscriptionNumber,   Isnull(Customers.customername,'')+' '+Isnull(Customers.Customerfamily,'') CustomerName,   ISNULL(Token.CreditTransferModes,'')CreditTransferModes,   ISNULL(credit_Capability_Activation,0)credit_Capability_Activation,   ISNULL(creditStartDate,'')creditStartDate,   ISNULL(disconnectivity_On_Negative_Credit,0)disconnectivity_On_Negative_Credit,   ISNULL(disconnectivity_On_Expired_Credit,0)disconnectivity_On_Expired_Credit     from Meter    left join Customers on Customers.CustomerID=Meter.CustomerID    inner join OBISValueHeader on OBISValueHeader.MeterID=Meter.MeterID    inner join Token on Token.MeterID=Meter.MeterID   inner join OBISValueDetail on OBISValueDetail.OBISValueHeaderID=OBISValueHeader.OBISValueHeaderID   inner join OBISS on OBISS.OBISID=OBISValueDetail.OBISID      where Meter.MeterID  in (select distinct MeterID from Token where convert(datetime,BuildDate) between @FromDate and  @ToDate)    and obiss.OBISID=83 and OBISS.Obis='0802010000ff'     and Meter.MeterID In(Select MeterID From MeterToGroup where MeterToGroup.GroupID=@GroupID and MeterToGroup.GroupType=@GroupType)    and Meter.MeterID In(Select MeterID From AccessUserToMeter  where AccessUserToMeter.UserID= @UserID  )         group by token.MeterID,meter.MeterID,MeterNumber,token.CreditValue,Token.TokenID,Token.CreditTransferModes,  Token.credit_Capability_Activation,  Token.creditStartDate,Token.disconnectivity_On_Negative_Credit,Token.disconnectivity_On_Expired_Credit,Customers.WatersubscriptionNumber  ,Customers.CustomerName,Customers.Customerfamily    order by MeterId       end    else if(@GroupID=0 and @WithCredit =1 )    begin   select distinct   ISNULL(Meter.MeterID,0) MeterID,   ISNULL(Meter.MeterNumber,0) MeterNumber,  ISNULL(Convert(Nvarchar ,max(Cast(OBISValueDetail.Value as decimal(18,2)))),'')Value ,   Token.CreditValue,   ISNULL(token.tokenid,0) TokenID,   ISNULL(Customers.WatersubscriptionNumber,'')WatersubscriptionNumber,   Isnull(Customers.customername,'')+' '+Isnull(Customers.Customerfamily,'') CustomerName,   ISNULL(Token.CreditTransferModes,'')CreditTransferModes,   ISNULL(credit_Capability_Activation,0)credit_Capability_Activation,   ISNULL(creditStartDate,'')creditStartDate,   ISNULL(disconnectivity_On_Negative_Credit,0)disconnectivity_On_Negative_Credit,   ISNULL(disconnectivity_On_Expired_Credit,0)disconnectivity_On_Expired_Credit     from Meter    left join Customers on Customers.CustomerID=Meter.CustomerID    inner join OBISValueHeader on OBISValueHeader.MeterID=Meter.MeterID    inner join Token on Token.MeterID=Meter.MeterID   inner join OBISValueDetail on OBISValueDetail.OBISValueHeaderID=OBISValueHeader.OBISValueHeaderID   inner join OBISS on OBISS.OBISID=OBISValueDetail.OBISID        where Meter.MeterID not in (select distinct MeterID from Token where convert(datetime,BuildDate) between @FromDate and  @ToDate)    and obiss.OBISID=83 and OBISS.Obis='0802010000ff'       and Meter.MeterID In(Select MeterID From AccessUserToMeter  where AccessUserToMeter.UserID= @UserID  )         group by token.MeterID,meter.MeterID,MeterNumber,token.CreditValue,Token.TokenID,Token.CreditTransferModes,  Token.credit_Capability_Activation,  Token.creditStartDate,Token.disconnectivity_On_Negative_Credit,Token.disconnectivity_On_Expired_Credit,Customers.WatersubscriptionNumber  ,Customers.CustomerName,Customers.Customerfamily    order by MeterId           end    else if(@GroupID=0 and @WithCredit =0)   begin  select  distinct  ISNULL(Meter.MeterID,0) MeterID,  ISNULL(Meter.MeterNumber,0) MeterNumber,  ISNULL(Convert(Nvarchar ,max(Cast(OBISValueDetail.Value as decimal(18,2)))),'')Value ,  Token.CreditValue,   ISNULL(Customers.WatersubscriptionNumber,'')WatersubscriptionNumber,   Isnull(Customers.customername,'')+' '+Isnull(Customers.Customerfamily,'') CustomerName,   ISNULL(Token.CreditTransferModes,'')CreditTransferModes,   ISNULL(credit_Capability_Activation,0)credit_Capability_Activation,   ISNULL(creditStartDate,'')creditStartDate,   ISNULL(disconnectivity_On_Negative_Credit,0)disconnectivity_On_Negative_Credit,   ISNULL(disconnectivity_On_Expired_Credit,0)disconnectivity_On_Expired_Credit   from Meter    left join Customers on Customers.CustomerID=Meter.CustomerID    inner join OBISValueHeader on OBISValueHeader.MeterID=Meter.MeterID    inner join Token on Token.MeterID=Meter.MeterID   inner join OBISValueDetail on OBISValueDetail.OBISValueHeaderID=OBISValueHeader.OBISValueHeaderID   inner join OBISS on OBISS.OBISID=OBISValueDetail.OBISID      where Meter.MeterID not in (select distinct MeterID from Token where convert(datetime,BuildDate) between @FromDate and  @ToDate )    and obiss.OBISID=83 and OBISS.Obis='0802010000ff'    and Meter.MeterID In(Select MeterID From AccessUserToMeter  where AccessUserToMeter.UserID= @UserID )         group by token.MeterID,meter.MeterID,MeterNumber,token.CreditValue,Token.TokenID,Token.CreditTransferModes,  Token.credit_Capability_Activation,  Token.creditStartDate,Token.disconnectivity_On_Negative_Credit,Token.disconnectivity_On_Expired_Credit,Customers.WatersubscriptionNumber  ,Customers.CustomerName,Customers.Customerfamily          union All    select distinct    ISNULL(Meter.MeterID,0) MeterID,    ISNULL(Meter.MeterNumber,0) MeterNumber,  ISNULL(Convert(Nvarchar ,max(Cast(OBISValueDetail.Value as decimal(18,2)))),'')Value ,    0,    ISNULL(Customers.WatersubscriptionNumber,'')WatersubscriptionNumber,    Isnull(Customers.customername,'')+' '+Isnull(Customers.Customerfamily,'') CustomerName,    '',    0,    '',    0,    0    from Meter          left join Customers on Customers.CustomerID=Meter.CustomerID    inner join OBISValueHeader on OBISValueHeader.MeterID=Meter.MeterID   inner join OBISValueDetail on OBISValueDetail.OBISValueHeaderID=OBISValueHeader.OBISValueHeaderID   inner join OBISS on OBISS.OBISID=OBISValueDetail.OBISID      where     obiss.OBISID=83 and OBISS.Obis='0802010000ff'    and Meter.MeterID not in(select distinct MeterID from Token where convert(datetime,BuildDate) between @FromDate and  @ToDate )    and Meter.MeterID In(Select MeterID From AccessUserToMeter  where AccessUserToMeter.UserID= @UserID  )         group by meter.MeterID,MeterNumber,Customers.WatersubscriptionNumber  ,Customers.CustomerName,Customers.Customerfamily    order by MeterId       end      end";
            scripts[5] = "update Meter set MeterNumber=Left (MeterNumber,5)+'000'+ RIGHT (MeterNumber,5)   where len(MeterNumber) =11 and  cast (RIGHT (MeterNumber,5) as int)>15000";
            scripts[6] = "ALTER  Proc [dbo].[UPDConsumedWaterforVEE]  @MeterID  Decimal,   @ReadDate  Nvarchar(50),@Details   VeeOBIS READONLY,     @ErrorMessage	nvarchar(1000)	         as           begin           try            	declare @ConsumedOBISID decimal,           	  			@FlowOBISID    decimal,  			@TotalWaterOBISID   Decimal,  			@TotalConsumedWater nvarchar(50),  			@OBISHeaderID  Decimal,  			@TransferDate		nvarchar(50)  			select @TotalWaterOBISID=OBISID From OBISS where obis='0811111111FF'  	  	create Table #TempVEE  	(  		[ConSumedWaterobis] [nvarchar](50) ,  		[ConSumedWaterobisID] decimal(18,0) ,  		[ConSumedWatervalue] [nvarchar](50) ,  		[debiobis] [nvarchar](50) ,  		[debiobisID]Decimal(18,0) ,  		[debivalue] [nvarchar](50) ,  		[TotalConsumedWater] [nvarchar](50)   	)  	insert Into #TempVEE  	Select   		det.ConSumedWaterobis,  		waterobiss.obisid ,  		det.ConSumedWatervalue  ,  		det.debiobis  ,  		debiobiss.obisid,  		det.debivalue ,  		det.TotalConsumedWater   	From @Details det  	inner join OBISS waterobiss on waterobiss.Obis=det.ConSumedWaterobis  	inner join OBISS debiobiss on debiobiss.Obis=det.debiobis  	  	select * From #TempVEE  	update ConsumedWater   	Set   		VEEConsumedWater=#TempVEE.ConSumedWatervalue,  		TotalConsumedWater=	#TempVEE.TotalConsumedWater,  		ErrorMessage=@ErrorMessage,  		ISVEE=1  	  	From #TempVEE  	where ConsumedWater.OBISID =#TempVEE.ConSumedWaterobisID and @Readdate LIKE '%'+ConsumedWater.Readdate+'%'             	  			and MeterID=@MeterID  	  	update ConsumedWater   	Set   		VEEConsumedWater=#TempVEE.debivalue		,  		ErrorMessage=@ErrorMessage,  		ISVEE=1  	From #TempVEE  	where ConsumedWater.OBISID =#TempVEE.debiobisID and  @Readdate LIKE '%'+ConsumedWater.Readdate+'%'   and MeterID=@MeterID    drop table #TempVEE  end try  begin catch  end catch";
            scripts[7] = "UPDATE ConsumedWater SET TotalConsumedWater=NULL WHERE meterid  IN   (SELECT meterid FROM Meter WHERE MeterNumber LIKE '207%'  )  ";
            scripts[8] = "UPDATE dbo.OBISValueDetail SET Value='True' WHERE obisid=629 AND Value ='01FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'  UPDATE dbo.OBISValueDetail SET Value='False' WHERE obisid=629 AND Value ='00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'    UPDATE dbo.OBISValueDetail SET Value='True' WHERE obisid=51 AND Value ='01FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'  UPDATE dbo.OBISValueDetail SET Value='False' WHERE obisid=51 AND Value ='00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'    UPDATE  Token  SET        MeterID = OBISValueHeader.MeterID  FROM     Token INNER JOIN    OBISValueHeader ON OBISValueHeader.OBISValueHeaderID = Token.OBISValueHeaderID AND Token.MeterID <> OBISValueHeader.MeterID";
            scripts[9] = "ALTER Proc [dbo].[INSConsumedWater] @MeterID      Decimal, @ConsumedWater  Nvarchar(50), @VEEConsumedWater  Nvarchar(50), @ConsumedDate   Nvarchar(50), @ReadDate  Nvarchar(50), @OBISID			  decimal, @DateOfReceivedFromSource   nvarchar(50), @OBISValueHeaderID      decimal =null, @Result       Decimal   out, @ErrMSG       Nvarchar(400) out as  begin try   if not exists (Select * From ConsumedWater  Where MeterID=@MeterID and ConsumedDate=@ConsumedDate  and OBISID=@OBISID  ) insert into ConsumedWater 	( 		MeterID, 		ConsumedWater, 		ConsumedDate, 		OBISID, 		VEEConsumedWater,  		ReadDate, 		DateOfReceivedFromSource, 		OBISHeaderID,  		valid	) 	values 	(		@MeterID,		@ConsumedWater,		@ConsumedDate,		@OBISID,		@VEEConsumedWater,		@ReadDate,		@DateOfReceivedFromSource,		@OBISValueHeaderID,		1	) end try begin catch 	set @Result=ERROR_NUMBER() Set 	@ErrMSG=ERROR_MESSAGE() end catch  ";
            // تغغیرات لازم برای vee جدید
            scripts[10] = "create TABLE[dbo].[MeterShutdownInterval](   [Id][decimal](18, 0) IDENTITY(1, 1) NOT NULL, [MeterId] [decimal](18, 0) NOT NULL,   [StartDate] [nvarchar](50) NOT NULL,  [EndDate] [nvarchar](50) NOT NULL,   [NumberOfMonths] [int] NOT NULL,  [UserId] [decimal](18, 0) NOT NULL,  [DefineDate] [nvarchar](50) NOT NULL, CONSTRAINT[PK_MeterShutdownInterval] PRIMARY KEY CLUSTERED (  [Id] ASC ) WITH(PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON[PRIMARY] ) ON[PRIMARY] ALTER TABLE[dbo].[MeterShutdownInterval]  WITH CHECK ADD CONSTRAINT[FK_MeterShutdownInterval_Meter] FOREIGN KEY([MeterId]) REFERENCES[dbo].[Meter]([MeterID]) ALTER TABLE[dbo].[MeterShutdownInterval] CHECK CONSTRAINT[FK_MeterShutdownInterval_Meter] ";
            scripts[11] = "create  PROC[dbo].[InsMeterShutdownInterval]       @MeterId Decimal, @StartDate   nvarchar(50), @EndDate nvarchar(50), @UserID    decimal(18, 0), @NumberOfMonths int, @DefineDate  nvarchar(50), @Result    decimal out, @ERRMSG    Nvarchar(400) out as begin try  INSERT INTO MeterShutdownInterval  (MeterId, StartDate, EndDate, NumberOfMonths, UserId, DefineDate) VALUES(@MeterId, @StartDate, @EndDate, @NumberOfMonths, @UserID, @DefineDate) end try begin catch set @Result = ERROR_NUMBER() Set @ERRMSG = ERROR_MESSAGE() end catch";
            scripts[12] = "create  Proc [dbo].[ShowMeterShutdownInterval] @MeterId Decimal, @Result    decimal out, @ERRMSG    Nvarchar(400) out as select * from MeterShutdownInterval where MeterId = @MeterId ";

            scripts[13] = "create TABLE[dbo].[VeeConsumedWater](    [Id][decimal](18, 0) IDENTITY(1, 1) NOT NULL,    [CustomerId] [decimal](18, 0) NULL, 	[MeterId] [decimal](18, 0) NULL, 	[ConsumedDate] [nvarchar](50) NULL, 	[Flow] [nvarchar](50) NULL, 	[MonthlyConsumption] [nvarchar](50) NULL, [TotalConsumption] [nvarchar](50) NULL, 	[IsValid] [bit] NULL, 	[PumpWorkingHour] [nvarchar](50) NULL,  CONSTRAINT[PK_VeeConsumedWater] PRIMARY KEY CLUSTERED(    [Id] ASC )WITH(PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON[PRIMARY] ) ON[PRIMARY]  ALTER TABLE[dbo].[VeeConsumedWater]   WITH CHECK ADD CONSTRAINT[FK_VeeConsumedWater_Meter] FOREIGN KEY([MeterId]) REFERENCES[dbo].[Meter]([MeterID])  ALTER TABLE[dbo].[VeeConsumedWater] CHECK CONSTRAINT[FK_VeeConsumedWater_Meter]";
            scripts[14] = "create TYPE[dbo].[VeeData] AS TABLE( [CustomerId][decimal](18, 0) NULL, [Meterid] [decimal](18, 0) NULL, [ConsumedDate] [nvarchar](50) NULL, [Flow] [nvarchar](50) NULL, [MonthlyConsumption] [nvarchar](50) NULL, [TotalConsumption] [nvarchar](50) NULL, [IsValid] [bit] NULL, [PumpWorkingHour] [nvarchar](50) NULL ) ";
            scripts[15] = "create Proc[dbo].[INSVeeConsumedWater] @MeterID Decimal, @CustomerId Decimal, @ConsumedDate nvarchar(50), @Flow nvarchar(50), @MonthlyConsumption nvarchar(50), @TotalConsumption nvarchar(50), @IsValid bit, @Result       Decimal   out,  @ErrMSG Nvarchar(400) out as begin try if not exists(Select * From ConsumedWater  Where MeterID = @MeterID and ConsumedDate = @ConsumedDate)  insert into VeeConsumedWater ( MeterID,       CustomerId, ConsumedDate,Flow, MonthlyConsumption, TotalConsumption, IsValid ) values( @MeterID, @CustomerId, @ConsumedDate, @Flow, @MonthlyConsumption, @TotalConsumption, @IsValid ) end try begin catch    set @Result = ERROR_NUMBER() Set @ErrMSG = ERROR_MESSAGE() end catch";




            scripts[16] = "create  Proc[dbo].[ShowVeeConsumedWater]  @meterId    Decimal as exec (' select MeterNumber,VeeConsumedWater.* from VeeConsumedWater inner join Meter on meter.MeterID=VeeConsumedWater.MeterId where VeeConsumedWater.IsValid=1 and  VeeConsumedWater.MeterId = ' + @meterId +   ' order by  consumedDate desc')";
            scripts[17] = "create  Proc [dbo].[UPDVeeConsumedWater]  @Details VeeData READONLY as begin try declare @CustomerId decimal, @Meterid decimal create Table #TempVeeConsumedWater (  [CustomerId][decimal](18, 0) NULL, [Meterid] [decimal](18, 0) NULL, [ConsumedDate] [nvarchar](50) collate Arabic_100_CI_AS NULL , [Flow] [nvarchar](50) collate Arabic_100_CI_AS NULL, [MonthlyConsumption] [nvarchar](50) collate Arabic_100_CI_AS NULL, [TotalConsumption] [nvarchar](50)  collate Arabic_100_CI_AS NULL,[IsValid] [bit] NULL, [PumpWorkingHour] [nvarchar](50)  collate Arabic_100_CI_AS NULL 	) 	insert Into #TempVeeConsumedWater Select det.CustomerID  , det.MeterId, det.ConsumedDate  , det.Flow, det.MonthlyConsumption , det.TotalConsumption, det.IsValid, det.PumpWorkingHour  From @Details det     select distinct @Meterid = Meterid,@CustomerId = customerid from #TempVeeConsumedWater 	select *From #TempVeeConsumedWater 	insert into VeeConsumedWater     select* from  #TempVeeConsumedWater		 where ConsumedDate not in (select ConsumedDate from VeeConsumedWater where @Meterid = Meterid and IsValid=1) 	 drop table #TempVeeConsumedWater end try begin catch     end catch";
            scripts[18] = "update ConsumedWater set VEEConsumedWater=null";
            scripts[19] = "ALTER proc [dbo].[ShowCustomerReport] @Filter nvarchar(100) as exec (' select   Meter.MeterID,  isnull( Customers.CustomerID,'''')CustomerID,  isnull( Customers.CustomerName,'''')CustomerName,  isnull(Customers.Customerfamily,'''')Customerfamily,  isnull(Customers.DossierNumber,'''')DossierNumber,  isnull(Customers.TypeOfUse,0)TypeOfUse,  isnull(Plains.PlainName,''0'')PlainName from Customers  left join Meter on Meter.CustomerID=Customers.CustomerID left join Locations on Locations.LocationID=Customers.LocationID left join Plains on Plains.PlainID=Locations.PlainID where 1=1'+@Filter)  ";
            scripts[20] = "delete ConsumedWater where meterid in (select Meterid from Meter where len(Meternumber)<5)  delete ConsumedActiveEnergy where meterid in (select Meterid from Meter where len(Meternumber)<5)  delete MeterToGroup  where meterid in (select Meterid from Meter where len(Meternumber)<5)  delete MeterError  where meterid in (select Meterid from Meter where len(Meternumber)<5)  delete token   where meterid in (select Meterid from Meter where len(Meternumber)<5)  delete from Meter where len(Meternumber)<5 ";


            scripts[21] = "INSERT INTO SoftversionToDeviceModel  (SoftversionToDeviceModelID,Softversion,DeviceModelID,OnMeterName) VALUES ( 9,'SEWM303_VD1',1,'RSASEWM303L0D3051301') INSERT INTO SoftversionToDeviceModel  (SoftversionToDeviceModelID,Softversion,DeviceModelID,OnMeterName) VALUES (10,'SEWM303_VD1',1,'RSASEWM303L0D3072701') INSERT INTO SoftversionToDeviceModel  (SoftversionToDeviceModelID,Softversion,DeviceModelID,OnMeterName) VALUES (11,'SEWM303_VD1',1,'RSASEWM303L0D3082701') INSERT INTO SoftversionToDeviceModel  (SoftversionToDeviceModelID,Softversion,DeviceModelID,OnMeterName) VALUES (12,'SEWM303_VI1',1,'RSASEWM303L0I3082701') INSERT INTO SoftversionToDeviceModel  (SoftversionToDeviceModelID,Softversion,DeviceModelID,OnMeterName) VALUES (13,'SEWM303_VI1',1,'RSASEWM303L0I3072701') INSERT INTO SoftversionToDeviceModel  (SoftversionToDeviceModelID,Softversion,DeviceModelID,OnMeterName) VALUES (14,'SEWM303_VI1',1,'RSASEWM303L0I3051301') INSERT INTO SoftversionToDeviceModel  (SoftversionToDeviceModelID,Softversion,DeviceModelID,OnMeterName) VALUES (15,'SEWM303_VI2',1,'RSASEWM303L0I3071702') INSERT INTO SoftversionToDeviceModel  (SoftversionToDeviceModelID,Softversion,DeviceModelID,OnMeterName) VALUES (16,'SEWM303_VI2',1,'RSASEWM303L0I3093002') INSERT INTO SoftversionToDeviceModel  (SoftversionToDeviceModelID,Softversion,DeviceModelID,OnMeterName) VALUES (17,'SEWM303_VD2',1,'RSASEWM303L0D3093002') INSERT INTO SoftversionToDeviceModel  (SoftversionToDeviceModelID,Softversion,DeviceModelID,OnMeterName) VALUES (18,'SEWM303_VI3',1,'RSASEWM303L0I4120903') INSERT INTO SoftversionToDeviceModel  (SoftversionToDeviceModelID,Softversion,DeviceModelID,OnMeterName) VALUES (19,'SEWM303_VD3',1,'RSASEWM303L0D4120903') INSERT INTO SoftversionToDeviceModel  (SoftversionToDeviceModelID,Softversion,DeviceModelID,OnMeterName) VALUES (20,'SEWM303_VD4',1,'RSASEWM303L0D6112104') INSERT INTO SoftversionToDeviceModel  (SoftversionToDeviceModelID,Softversion,DeviceModelID,OnMeterName) VALUES (21,'SEWM303_VI4',1,'RSASEWM303L0I6112104') ";
            scripts[22] = "create TABLE TempSoftwareVersion2(meterid  decimal(18,0) , softwareversion  nvarchar(100))  ";
            scripts[23] = "delete TempSoftwareVersion2 insert into TempSoftwareVersion2 (meterid,softwareversion) select distinct meterid,value from OBISValueDetail  inner join OBISValueHeader on OBISValueHeader.OBISValueHeaderID=OBISValueDetail.OBISValueHeaderID inner join obiss on obiss.obisid=OBISValueDetail.obisid where value like 'rsa%'  and ObisLatinDesc='Software Version'";
            scripts[24] = "UPDATE m  SET m.SoftversionToDeviceModelID = SoftversionToDeviceModel.SoftversionToDeviceModelID FROM Meter AS m INNER JOIN TempSoftwareVersion2 AS P  inner join SoftversionToDeviceModel on SoftversionToDeviceModel.OnMeterName COLLATE Arabic_100_CI_AS = p.softwareversion  COLLATE Arabic_100_CI_AS        ON m.meterId = P.MEterid    WHERE m.MeterNumber like '19%' ";
            scripts[25] = "create  FUNCTION [dbo].[GetConsumedWaterOBISDESC303] ()  RETURNS nvarchar(4000)  AS  BEGIN    	declare @ELTable Table (OBISID decimal,OBISDesc Nvarchar(100),RomNum  int)   		Declare @ELStr Nvarchar(4000), 			@OBISID decimal, 			@OBISDesc Nvarchar(200), 			@RowNumber  int   		  		insert into @ELTable 	  		select 	obisid, 	'TotalWater',  	 1 as rownumber 	From OBISS 	  		where obis='0802010000FF' 	union	  		select 	obisid, 	'CurrentWater',  	 1 as rownumber 	From OBISS 	  		where obis='0802010100FF'	  		  		union  		select 	Obisid ,		'W',	ROW_NUMBER() OVER(ORDER BY obis) AS Row		From OBISs	where obis in (	'080201000065',					'080201000066',					'080201000067',					'080201000068',					'080201000069',					'08020100006A',					'08020100006B',					'08020100006C',					'08020100006D',					'08020100006E',					'08020100006F',					'080201000070',					'080201000071',					'080201000072',					'080201000073',					'080201000074',					'080201000075',					'080201000076',					'080201000077',					'080201000078',					'080201000079',					'08020100007A',					'08020100007B')  		union	  		select 	obisid, 	'TotalPumpworkingTime',  	 1 as rownumber 	From OBISS 	  		where obis='0802606202FF'	  			union   			select 	Obisid ,		'PumpworkingTime',	ROW_NUMBER() OVER(ORDER BY obis) AS Row		From OBISs	where obis in (	'080260620265',					'080260620266',					'080260620267',					'080260620268',					'080260620269',					'08026062026A',					'08026062026B',					'08026062026C',					'08026062026D',					'08026062026E',					'08026062026F',					'080260620270',					'080260620271',					'080260620272',					'080260620273',					'080260620274',					'080260620275',					'080260620276',					'080260620277',					'080260620278',					'080260620279',					'08026062027A',					'08026062027B'					)    	declare mycsr cursor for select Distinct OBISID,OBISDESC,RomNum from @ELTable 	Set @ELStr = ''	open mycsr	fetch next from mycsr into @OBISID,@OBISDESC,@RowNumber	while @@fetch_status = 0			begin                                set @ELStr = @ELStr +'['+Cast(@OBISID as nvarchar)+']'+' As '+Cast(@OBISDESC as nvarchar)+Cast(@RowNumber as nvarchar)+',' 				fetch next from mycsr into @OBISID,@OBISDESC,@RowNumber			end	close mycsr	deallocate mycsr	if len(@ELStr)>0	Set @ELStr = left(@ELStr,len(@ELStr)-1)	RETURN (@ELStr)END";
            scripts[26] = "create  FUNCTION [dbo].[GetConsumedWaterOBIS303] ()  RETURNS nvarchar(4000) AS BEGIN 	declare @ELTable Table (OBISID decimal) 	Declare @ELStr Nvarchar(4000), 			@OBISID decimal							insert into @ELTable 		select Distinct OBISID	From OBISs	where obis in ('0802010000FF',					'0802010100FF',					'080201000065',					'080201000066',					'080201000067',					'080201000068',					'080201000069',					'08020100006A',					'08020100006B',					'08020100006C',					'08020100006D',					'08020100006E',					'08020100006F',					'080201000070',					'080201000071',					'080201000072',					'080201000073',					'080201000074',					'080201000075',					'080201000076',					'080201000077',					'080201000078',					'080201000079',					'08020100007A',					'08020100007B',										'0802606202FF',					'080260620265',					'080260620266',					'080260620267',					'080260620268',					'080260620269',					'08026062026A',					'08026062026B',					'08026062026C',					'08026062026D',					'08026062026E',					'08026062026F',					'080260620270',					'080260620271',					'080260620272',					'080260620273',					'080260620274',					'080260620275',					'080260620276',					'080260620277',					'080260620278',					'080260620279',					'08026062027A',					'08026062027B')	    	declare mycsr cursor for select Distinct OBISID from @ELTable 	Set @ELStr = ''	open mycsr	fetch next from mycsr into @OBISID	while @@fetch_status = 0			begin                                set @ELStr = @ELStr +'['+Cast(@OBISID as nvarchar)+']'+',' 				fetch next from mycsr into @OBISID			end	close mycsr	deallocate mycsr	if len(@ELStr)>0	Set @ELStr = left(@ELStr,len(@ELStr)-1)	RETURN (@ELStr)END";
            scripts[27] = "create Proc [dbo].[ShowConsumedWaterForVee303] @Filter   NVarchar(400) as Declare @OBISIDSTR   nvarchar(4000),		@OBISDescSTR   nvarchar(4000) Select @OBISIDSTR=[dbo].[GetConsumedWaterOBIS303] () Select @OBISDescSTR=[dbo].[GetConsumedWaterOBISDESC303] ()   Exec ( 'select MeterNumber,ReadDate,[83] As TotalWater1,[88] As CurrentWater1,[678] As W1,[679] As W2,[680] As W3,[681] As W4,[682] As W5,[683] As W6,[684] As W7,[685] As W8,[686] As W9,[687] As W10,[688] As W11,[689] As W12,[690] As W13,[691] As W14,[692] As W15,[693] As W16,[694] As W17,[695] As W18,[696] As W19,[697] As W20,[698] As W21,[699] As W22,[700] As W23,[702] As TotalPumpworkingTime1,[705] As PumpworkingTime1,[708] As PumpworkingTime10,[711] As PumpworkingTime11,[714] As PumpworkingTime12,[717] As PumpworkingTime2,[720] As PumpworkingTime3,[723] As PumpworkingTime4,[726] As PumpworkingTime5,[729] As PumpworkingTime6,[732] As PumpworkingTime7,[735] As PumpworkingTime8,[738] As PumpworkingTime9,[742] As PumpworkingTime13,[743] As PumpworkingTime14,[744] As PumpworkingTime15,[745] As PumpworkingTime16,[746] As PumpworkingTime17,[747] As PumpworkingTime18,[748] As PumpworkingTime19,[749] As PumpworkingTime20,[750] As PumpworkingTime21,[751] As PumpworkingTime22,[752] As PumpworkingTime23 From (   select   isnull(Meter.MeterNumber,'''') MeterNumber,   ISNULL(Header.ReadDate,'''')ReadDate, ISNULL(Main.Value,'''')Value,  ISNULL(Main.OBIsID,0)OBIsID, ISNULL(Main.OBISValueHeaderID,0)OBISHeaderID, 1 as  ISValue From OBISValueDetail Main inner join OBISValueHeader Header on Header.OBISValueHeaderID=Main.OBISValueHeaderID inner join Meter on Meter.MeterID=Header.MeterID where 1=1 and Main.valid=1    ' +@Filter+' )m PIVOT ( max (Value) FOR ObisID IN ([83],[88],[678],[679],[680],[681],[682],[683],[684],[685],[686],[687],[688],[689],[690],[691],[692],[693],[694],[695],[696],[697],[698],[699],[700],[702],[705],[708],[711],[714],[717],[720],[723],[726],[729],[732],[735],[738],[742],[743],[744],[745],[746],[747],[748],[749],[750],[751],[752]) ) AS pvt order by TotalWater1 desc,ReadDate desc ') ";
            scripts[28] = "delete CardToMeter where MeterID in (select MeterID from Meter where MeterNumber not like '207%' and MeterNumber not like '19%' and DeviceModelID in (1, 3))";
            scripts[29] = "delete from OBISValueDetail where OBISValueHeaderID in (select OBISValueHeaderID from OBISValueHeader where MeterId in (select MeterID from Meter where MeterNumber not like '207%' and MeterNumber not like '19%' and DeviceModelID in (1, 3)))";
            scripts[30] = "delete from OBISValueHeader where MeterId in (select MeterID from Meter where MeterNumber not like '207%' and MeterNumber not like '19%' and DeviceModelID in (1, 3))";
            scripts[31] = "delete from VeeConsumedWater where MeterId in (select MeterID from Meter where MeterNumber not like '207%' and MeterNumber not like '19%' and DeviceModelID in (1, 3))";
            scripts[32] = "delete from ConsumedWater where MeterId in (select MeterID from Meter where MeterNumber not like '207%' and MeterNumber not like '19%' and DeviceModelID in (1, 3))";
            scripts[33] = "delete from ConsumedActiveEnergy where MeterId in (select MeterID from Meter where MeterNumber not like '207%' and MeterNumber not like '19%' and DeviceModelID in (1, 3))";
            scripts[34] = "delete from MeterToGroup where MeterId in (select MeterID from Meter where MeterNumber not like '207%' and MeterNumber not like '19%' and DeviceModelID in (1, 3))";
            scripts[35] = "delete from Curve where MeterId in (select MeterID from Meter where MeterNumber not like '207%' and MeterNumber not like '19%' and DeviceModelID in (1, 3))";
            scripts[36] = "delete from MeterError where MeterId in (select MeterID from Meter where MeterNumber not like '207%' and MeterNumber not like '19%' and DeviceModelID in (1, 3))";
            scripts[37] = "delete Token where MeterId  in (select MeterID from Meter where MeterNumber not like '207%' and MeterNumber not like '19%' and DeviceModelID in (1, 3))";
            scripts[38] = "delete from Meter where MeterID in (select MeterID from Meter where MeterNumber not like '207%' and MeterNumber not like '19%' and DeviceModelID in (1, 3))";
            scripts[39] = "create proc [dbo].[DelVeeConsumedWater] @customerid	decimal(18,0),@meterId	decimal(18,0), @startDate     nvarchar(30) , @endDate     nvarchar(30) , @errMSG     nvarchar(400) out as begin try delete veeconsumedwater where customerid = @customerid    and meterId=@meterId   end try begin catch 	set  @ErrMSG=ERROR_MESSAGE() end catch  ";
            scripts[40] = "UPDATE Meter SET CustomerID= NULL WHERE CustomerID IN (select CustomerID from Meter    GROUP BY CustomerID  HAVING COUNT(METERID)>1)";
            scripts[41] = "create Proc [dbo].[UPDMeter] @MeterNumber    nvarchar(50),@DeviceModelID  decimal, @IsDirect        bit, @SoftversionToDeviceModelID    decimal, @ModemID          decimal, @CustomerID	decimal(18, 0)	, @Valid        bit, @LocationID   decimal,@MeterID       decimal ,@ErrMSG        Nvarchar(400)out,@Result        decimal out as Begin try 	Declare @OldCustomerID   Decimal 	declare  				  @PlainID   decimal, 				  @CatchmentID  decimal, 				  @AreaID       decimal,				  @OfficeID     DECIMAL, 				  @WsubOfficeID DECIMAL, 				  @SoftversionToDeviceModelID1    decimal 				  	Select @OldCustomerID=CustomerID,@SoftversionToDeviceModelID1=SoftversionToDeviceModelID From Meter where MeterID=@MeterID 	 if @SoftversionToDeviceModelID1>0 	 begin 		set @SoftversionToDeviceModelID=@SoftversionToDeviceModelID1 	 end 	IF @SoftversionToDeviceModelID = 0  	BEGIN 		IF SUBSTRING(@MeterNumber,1,2) = '19' 			BEGIN 				SET @SoftversionToDeviceModelID =1 			END 			 		ELSE 			BEGIN 				SET @SoftversionToDeviceModelID =2 			END	 	END 	 	IF @ModemID=0  		BEGIN 	Update Meter set 	 			DeviceModelID=@DeviceModelID, 			IsDirect=@IsDirect, 			SoftversionToDeviceModelID=@SoftversionToDeviceModelID,						CustomerID=@CustomerID 			where MeterID=@MeterID 		END 	ELSE 		BEGIN 			Update Meter 			set 	 			DeviceModelID=@DeviceModelID, 			IsDirect=@IsDirect, 			SoftversionToDeviceModelID=@SoftversionToDeviceModelID,			ModemID=@ModemID,			CustomerID=@CustomerID			where MeterID=@MeterID		END 			if @OldCustomerID is not null 	begin 		select @OfficeID=OfficeID ,@LocationID=LocationID ,@WsubOfficeID=WSubofficeID from Customers where CustomerID=@OldCustomerID	 	    select @PlainID=PlainID ,@CatchmentID=CatchmentID From Locations Where LocationID=@LocationID	 	    	    delete MeterToGroup 	    where MeterID=@MeterID and GroupID=@OfficeID and GroupType=4 	  	    delete MeterToGroup 	    where MeterID=@MeterID and GroupID=@WsubOfficeID and GroupType=5 	     	    delete MeterToGroup 	    where MeterID=@MeterID and GroupID=@PlainID and GroupType=3 	      delete MeterToGroup 	    where MeterID=@MeterID and GroupID=@CatchmentID and GroupType=2	    		end 		 	if @CustomerID is not null  		begin 		 		  			select @OfficeID=OfficeID ,@LocationID=LocationID from Customers where CustomerID=@CustomerID 			select @WsubOfficeID=WSubofficeID ,@LocationID=LocationID from Customers where CustomerID=@CustomerID 			select @PlainID=PlainID ,@CatchmentID=CatchmentID From Locations Where LocationID=@LocationID 			if @OfficeID is not null 			begin 				exec InsMeterToGroup  @MeterID,@OfficeID,4,@Result Out,@ErrMSG Out 	 END 			if @WsubOfficeID is not null 			begin 				exec InsMeterToGroup  @MeterID,@WsubOfficeID,5,@Result Out,@ErrMSG Out 	end 	if @PlainID is not null 			begin 				exec InsMeterToGroup  @MeterID,@PlainID,3,@Result Out,@ErrMSG Out 	end 	if @CatchmentID is not null 			begin 				exec InsMeterToGroup  @MeterID,@CatchmentID,2,@Result Out,@ErrMSG Out 	end end 		end try begin catch 	Set @Result=ERROR_NUMBER() Set @ErrMSG=ERROR_MESSAGE() end catch ";
            scripts[42] = "ALTER Proc [dbo].[INSMeter] \r\n @MeterNumber    nvarchar(50),\r\n  @DeviceModelID  decimal, \r\n  @IsDirect        bit, \r\n  @SoftversionToDeviceModelID    decimal, \r\n  @Softversion   nvarchar(50),  \r\n  @ModemID          decimal,  \r\n  @CustomerID\tdecimal(18, 0)\t,  \r\n  @GroupID     Decimal,  \r\n  @GroupType\t\tint,  \r\n  @Valid        bit,  \r\n  @MeterID       decimal out,  \r\n  @ErrMSG        Nvarchar(400)out,   \r\n  @Result        decimal out    \r\n  as  \r\n    Begin        \t\r\n\t\ttry \t    \t    \t\t\t\r\n\t\t\tdeclare @LocationID decimal,\t\t\t\t     \t\t\t\t\r\n\t\t\t@PlainID   decimal,\t\t\t\t  \t\t\t     \t\t\t\t\r\n\t\t\t@CatchmentID  decimal,\t\t\t     \t\t\t\t\r\n\t\t\t@AreaID       decimal,\t     \t\t\t\t\r\n\t\t\t@OfficeID     decimal,\t\t\t     \t\t\t\t\r\n\t\t\t@WsubOfficeID decimal\t \t\t  \t\t\t   \t\t\t\t       \t\t\t\t\t\t\t\t     \t\t\r\n\t\t\tdeclare @DeviceModelName  Nvarchar(50),\t     \t\t\t\r\n\t\t\t@DeviceTypeID decimal \t\t     \t\t\r\n\t\t\t\r\n\t\t\tif SUBSTRING(@MeterNumber,1,3)='207' \t\t\t     \t\t\t\r\n\t\t\tbegin \t\t\t\t\t     \t\t\t\t\r\n\t\t\t\tselect @DeviceModelName='207'\t\t\t     \t\t\t\t\r\n\t\t\t\tselect @DeviceModelID=1 \t \t\t     \t\t\t\t\r\n\t\t\t\tset @SoftversionToDeviceModelID=2      \t\t\t\r\n\t\t\tend  \t     \t\t\t    \t\t\t\r\n\t\t\tif SUBSTRING(@MeterNumber,1,3)!='207'  \t    \t\t\t\t\r\n\t\t\tbegin     \t\t\t\t\t\r\n\t\t\t\tselect @DeviceModelName='303' \t \t\t\t     \t\t\t\t\t\r\n\t\t\t\tif SUBSTRING(@MeterNumber,3,1)='3'     \t\t\t\t\t\t\r\n\t\t\t\t\tselect @IsDirect=1     \t\t\t\t\t\r\n\t\t\t\telse     \t\t\t\t\t\t\r\n\t\t\t\t\tselect @IsDirect=0     \t\t\t\t\t\r\n\t\t\t\tend     \t\t\t \t\t\t\r\n\t\t\t\tif @Softversion is not null and SUBSTRING(@MeterNumber,1,2)='19' \t\t\t\t\r\n\t\t\t\t\tSelect @SoftversionToDeviceModelID=SoftversionToDeviceModelID,@DeviceModelID=DeviceModelID From SoftversionToDeviceModel  \r\n\t\t\t\t\t\twhere  @Softversion= OnMeterName  \r\n\t\t\t\t\t\t\t\t\t\t     \t\t\t\t\t  \t\t\t\t\t \t\t\t\r\n\t\t\t\tif not exists(Select * From Meter Where MeterNumber=@MeterNumber and Valid=1)\t \t\t\t\t\r\n\t\t\t\t\tbegin \t \t\t\r\n\t\t\t\t\tselect @MeterID=ISNULL(MAX(MeterID),0)+1 From Meter\t\r\n\t\t\t\t\tif(@CustomerID<1)\t\t\t\t\t\t\t\t \t\t\t\t\t\r\n\t\t\t\t\t\tset @CustomerID=null\r\n\t\t\t\t\tif( @SoftversionToDeviceModelID is null or @SoftversionToDeviceModelID<1)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t\t\t\t\t\t \t\t\t\t\t\r\n\t\t\t\t\t\tset @SoftversionToDeviceModelID=21\r\n\t\t\t\t\tinsert into Meter (MeterNumber    ,DeviceModelID  ,IsDirect,SoftversionToDeviceModelID,ModemID,Valid,MeterID,CustomerID) \r\n\t\t\t\t\tValues(\t@MeterNumber,@DeviceModelID,@IsDirect,@SoftversionToDeviceModelID,@ModemID,@Valid,@MeterID,@CustomerID) \t\r\n\t\t\t\t\texec InsMeterToGroup  @MeterID,@GroupID,@GroupType,@Result Out,@ErrMSG Out\t \t\t\t\t\t \t\t\t\t\t\r\n\t\t\t\t\texec InsMeterToGroup  @MeterID,1,1,@Result Out,@ErrMSG Out \t\t \t\t\t\t\t \t\t\t\t\t\r\n\t\t\t\t\tif @CustomerID is not null  \t\t\t\t\t\t\r\n\t\t\t\t\t\tbegin\t\t \t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tselect @LocationID=LocationID,@OfficeID=OfficeID,@WsubOfficeID=WSubofficeID from Customers\r\n\t\t\t\t\t\t\t\t\t\twhere CustomerID=@CustomerID\t\t\t\t\t \t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tselect @PlainID=PlainID ,@CatchmentID=CatchmentID From Locations Where LocationID=@LocationID \r\n\t\t\t\t\t\t\tif @OfficeID is not null \t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\texec InsMeterToGroup  @MeterID,@OfficeID,4,@Result Out,@ErrMSG Out \t\t \t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif @WsubOfficeID is not null\t\t\t\r\n\t\t\t\t\t\t\t\texec InsMeterToGroup   @MeterID,@WsubOfficeID,5,@Result Out,@ErrMSG Out\t\t\r\n\t\t\t\t\t\t\tif @PlainID is not null\t\t\t\t\t\t \t\r\n\t\t\t\t\t\t\t\texec InsMeterToGroup  @MeterID,@PlainID,3,@Result Out,@ErrMSG Out \t\t\t\t\t\t \t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif @CatchmentID is not null\t\t\t\t\t\t \t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\texec InsMeterToGroup  @MeterID,@CatchmentID,2,@Result Out,@ErrMSG Out\t\t\t\t\t \t\t\t\t\t\t\r\n\t\t\t\t\t\tend \t\t\t\t \t\t\t\t\r\n\t\t\t\t\tend \t\t\t\t \t\t \t\t\t\r\n\t\t\t\telse \t \t\t\t\t\r\n\t\t\t\t\tbegin \t\t\t\t\t\r\n\t\t\t\t\t\tdeclare @custom decimal(18,0)  \t\t \t\t\t\t\t\r\n\t\t\t\t\t\tSelect @MeterID=MeterID, @custom=CustomerID From Meter Where MeterNumber=@MeterNumber  and Valid=1\r\n\t\t\t\t\t\tif @custom is not null\r\n\t\t\t\t\t\t\tselect @CustomerID=customerid from Meter where MeterNumber=@MeterNumber   and Valid=1\r\n\t\t\t\t\t\tif @CustomerID = 0\r\n\t\t\t\t\t\t\tset @CustomerID=null\r\n\t\t\t\t\t\tupdate Meter set Valid=1, ModemID=@ModemID,CustomerID=@CustomerID,SoftversionToDeviceModelID=@SoftversionToDeviceModelID,\r\n\t\t\t\t\t\t\t\t\tDeviceModelID=@DeviceModelID where MeterID=@MeterID\r\n\t\t\t\t\t\texec InsMeterToGroup  @MeterID,@GroupID,@GroupType,@Result Out,@ErrMSG Out\r\n\t\t\t\t\t\texec InsMeterToGroup  @MeterID,1,1,@Result Out,@ErrMSG Out\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif @CustomerID is not null\r\n\t\t\t\t\t\tbegin\r\n\t\t\t\t\t\t\tselect @LocationID=LocationID,@OfficeID=OfficeID,@WsubOfficeID=WSubofficeID from Customers where\tCustomerID=@CustomerID \t\t\t\t \t\r\n\t\t\t\t\t\t\tselect @PlainID=PlainID ,@CatchmentID=CatchmentID From Locations Where LocationID=@LocationID \t\t\t\t\t \t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif @OfficeID is not null \t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\texec InsMeterToGroup  @MeterID,@OfficeID,4,@Result Out,@ErrMSG Out \t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif @WsubOfficeID is not null\t\t\t  \t\t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\texec InsMeterToGroup  @MeterID,@WsubOfficeID,5,@Result Out,@ErrMSG Out\t\t\t\t\t\t \t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif @PlainID is not null \t\t\t\t\t\t\t\t \t\t \t\t\t\t\t \t\t\t\r\n\t\t\t\t\t\t\t\texec InsMeterToGroup  @MeterID,@PlainID,3,@Result Out,@ErrMSG Out \t \t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif @CatchmentID is not null \t\t\t\t\t\t\t \t\t\t\t\t\t\t\t \t\t\r\n\t\t\t\t\t\t\t\texec InsMeterToGroup  @MeterID,@CatchmentID,2,@Result Out,@ErrMSG Out\t\t\t\t \t\t\t\t\t\t\r\n\t\t\t\t\t\tend \t\t\t\t \t\t\r\n\t\t\t\t\tend \t  \t\r\n\t\t\tend \r\n\t\ttry \t\r\n\t\t\tbegin \tcatch \t \t\t\r\n\t\t\t\t\tSet @Result=ERROR_NUMBER() Set @ErrMSG=ERROR_MESSAGE() \t     \r\n\t\t\tend catch     \t\t\t\t\t  \t\t\t     \t\t\t\t";
            scripts[43] = " UPDATE Translate SET ObjectDesc = 'نمایش اطلاعات قرائت شده' WHERE(ObjectDesc LIKE '%اطا%')";
            scripts[44] = "ALTER Proc [dbo].[INSConsumedWater] @MeterID      Decimal, @ConsumedWater  Nvarchar(50),  @VEEConsumedWater  Nvarchar(50),  @ConsumedDate   Nvarchar(50),   @ReadDate  Nvarchar(50),    @OBISID			  decimal,     @DateOfReceivedFromSource   nvarchar(50),      @OBISValueHeaderID      decimal =null,       @Result       Decimal   out,        @ErrMSG       Nvarchar(400) out             as  begin try            if not exists (Select * From ConsumedWater  Where MeterID=@MeterID and ConsumedDate=@ConsumedDate and OBISHeaderID=@OBISValueHeaderID             and OBISID=@OBISID  ) insert into ConsumedWater 	            ( 		MeterID, 		ConsumedWater, 		ConsumedDate, 		OBISID, 		VEEConsumedWater,  		ReadDate, 		DateOfReceivedFromSource,             		OBISHeaderID,  		valid	) 	values 	(		@MeterID,		@ConsumedWater,		@ConsumedDate,		@OBISID,		@VEEConsumedWater,	             			@ReadDate,		@DateOfReceivedFromSource,		@OBISValueHeaderID,		1	)             			 end try begin catch 	set @Result=ERROR_NUMBER() Set 	@ErrMSG=ERROR_MESSAGE() end catch  ";
            scripts[45] = "ALTER TABLE Token ADD Isvalid bit  NOT NULL DEFAULT 1 ";
            scripts[46] = "ALTER proc [dbo].[DelMeter] @MeterID	decimal(18,0), @Result     decimal(18,0) out, @ErrMSG     nvarchar(400) out as begin try  		update Meter 	set valid=0 	where MeterID=@MeterID  	update MeterToCustomer 	set valid=0 	where  MeterID=@MeterID 	delete MeterToGroup 	where  MeterID=@MeterID  	update Meter 	set CustomerID=null, 	    ModemID=null 	where MeterID=@MeterID  	update OBISValueDetail 	set valid=0 	where OBISValueHeaderID in (Select OBISValueHeaderID From OBISValueHeader where  MeterID=@MeterID)update OBISValueHeader 	set valid=0 	where  MeterID=@MeterID update ConsumedActiveEnergy 	set valid=0 	where  MeterID=@MeterID update ConsumedWater 	set valid=0  	where  MeterID=@MeterID update VeeConsumedWater 	set IsValid=0 	where  MeterID=@MeterID  update Token 	set IsValid=0 	where  MeterID=@MeterID  end try begin catch 	set @Result=ERROR_NUMBER() Set @ErrMSG=ERROR_MESSAGE() end catch ";
            scripts[47] = "ALTER proc [dbo].[UPDMeter] @meternumber    nvarchar(50),@devicemodelid  decimal, @isdirect        bit, @softversiontodevicemodelid    decimal, @modemid          decimal, @customerid\tdecimal(18, 0)\t, @valid        bit, @locationid   decimal,@meterid       decimal ,@errmsg        nvarchar(400)out,@result        decimal out as begin try \tdeclare @oldcustomerid   decimal \tdeclare  \t\t\t\t  @plainid   decimal, \t\t\t\t  @catchmentid  decimal, \t\t\t\t  @areaid       decimal,\t\t\t\t  @officeid     decimal, \t\t\t\t  @wsubofficeid decimal, \t\t\t\t  @softversiontodevicemodelid1    decimal \t\t\t\t  \tselect @oldcustomerid=customerid,@softversiontodevicemodelid1=softversiontodevicemodelid from meter where meterid=@meterid \t if @softversiontodevicemodelid1>0 \t begin \t\tset @softversiontodevicemodelid=@softversiontodevicemodelid1 \t end \tif @softversiontodevicemodelid = 0  \tbegin \t\tif substring(@meternumber,1,2) = '19' \t\t\tbegin \t\t\t\tset @softversiontodevicemodelid =1 \t\t\tend \t\t\t \t\telse \t\t\tbegin \t\t\t\tset @softversiontodevicemodelid =2 \t\t\tend\t \tend \t \tif @modemid=0  \t\tbegin \tupdate meter set \t \t\t\tdevicemodelid=@devicemodelid, \t\t\tisdirect=@isdirect, \t\t\tsoftversiontodevicemodelid=@softversiontodevicemodelid,\t\t\t\t\t\tcustomerid=@customerid \t\t\twhere meterid=@meterid \t\tend \telse \t\tbegin \t\t\tupdate meter \t\t\tset \t \t\t\tdevicemodelid=@devicemodelid, \t\t\tisdirect=@isdirect, \t\t\tsoftversiontodevicemodelid=@softversiontodevicemodelid,\t\t\tmodemid=@modemid,\t\t\tcustomerid=@customerid\t\t\twhere meterid=@meterid\t\tend \t\t\tif @oldcustomerid is not null \tbegin \t\tselect @officeid=officeid ,@locationid=locationid ,@wsubofficeid=wsubofficeid from customers where customerid=@oldcustomerid\t \t    select @plainid=plainid ,@catchmentid=catchmentid from locations where locationid=@locationid\t \t    \t    delete metertogroup \t    where meterid=@meterid and groupid=@officeid and grouptype=4 \t  \t    delete metertogroup \t    where meterid=@meterid and groupid=@wsubofficeid and grouptype=5 \t     \t    delete metertogroup \t    where meterid=@meterid and groupid=@plainid and grouptype=3 \t      delete metertogroup \t    where meterid=@meterid and groupid=@catchmentid and grouptype=2\t    \t\tend \t\t \tif @customerid is not null  \t\tbegin \t\t \t\t  \t\t\tselect @officeid=officeid ,@locationid=locationid from customers where customerid=@customerid \t\t\tselect @wsubofficeid=wsubofficeid ,@locationid=locationid from customers where customerid=@customerid \t\t\tselect @plainid=plainid ,@catchmentid=catchmentid from locations where locationid=@locationid \t\t\tif @officeid is not null \t\t\tbegin \t\t\t\texec insmetertogroup  @meterid,@officeid,4,@result out,@errmsg out \t end \t\t\tif @wsubofficeid is not null \t\t\tbegin \t\t\t\texec insmetertogroup  @meterid,@wsubofficeid,5,@result out,@errmsg out \tend \tif @plainid is not null \t\t\tbegin \t\t\t\texec insmetertogroup  @meterid,@plainid,3,@result out,@errmsg out \tend \tif @catchmentid is not null \t\t\tbegin \t\t\t\texec insmetertogroup  @meterid,@catchmentid,2,@result out,@errmsg out \tend end \t\tend try begin catch \tset @result=error_number() set @errmsg=error_message() end catch ";
            scripts[48] = "ALTER proc [dbo].[ShowMeterToCustomer] @Filter     nvarchar(400) AS EXEC( ' Select 	ISNULL(Main.CustomerID,0)CustomerID,	ISNULL(Main.MeterID,0)MeterID,	ISNULL(Main.Valid,0)Valid,		ISNULL(Main.MeterNumber,'''')MeterNumber,	ISNULL(Customers.CustomerName,'''')CustomerName, 	ISNULL(Customers.Customerfamily,'''')Customerfamily,	ISNULL(Customers.FatherName,'''')FatherName,	ISNULL(Customers.DossierNumber,'''')DossierNumber,	ISNULL(Customers.NationalCode,0)NationalCode,	ISNULL(Customers.WatersubscriptionNumber,'''')WatersubscriptionNumber, 	ISNULL(Customers.WellLicense,'''')WellLicense,		ISNULL(Customers.WellAddress,'''') WellAddress			From Meter Main	Inner Join Customers on Customers.CustomerID=Main.CustomerID	Where 1=1 and Main.Valid=1' +@Filter 	)";
            scripts[49] = "ALTER Proc [dbo].[ShowMeterNumberIssuance] @MeterNumber    nvarchar(50),@UserID			decimal(18,0),@IsExits        bit out,@IsAllow		bit out,@Result        decimal out,@ErrMSG        NVARCHAR(400) out as begin try 	if exists(select * From Meter Where MeterNumber=@MeterNumber and Valid=1) 	select 	@IsExits=1 	else 	select  @IsExits=0 	 declare @MeterID	decimal(18,0)	 set @MeterID = (select MeterID from Meter where MeterNumber=@MeterNumber and Valid=1)    if exists(select *  From AccessUserToMeter Access where Access.UserID=@UserID and MeterID=@MeterID)	     select 	@IsAllow=1 	else 	select  @IsAllow=0 		print @IsExits 	print @IsAllow  end try begin catch 	Set @Result=ERROR_NUMBER() 	Set @ErrMSG=ERROR_MESSAGE() end catch ";
            scripts[50] = "ALTER Proc [dbo].[ShowMeterNumber] @MeterNumber    nvarchar(50), @IsExits        bit out, @Result        decimal out, @ErrMSG        NVARCHAR(400) out as begin try 	if exists(select * From Meter Where MeterNumber=@MeterNumber and Valid=1) 	select 	@IsExits=1 	else 	select  @IsExits=0 end try begin catch 	Set @Result=ERROR_NUMBER() 	Set @ErrMSG=ERROR_MESSAGE() end catch ";
            //scripts[51] = "ALTER Proc [dbo].[INSOBISValueHeader] @ReadDate            Nvarchar(50), @DeviceTypeID        decimal, @UserID              decimal, @TransferDate        Nvarchar(50), @MeterID             decimal(18,0), @SourceTypeID        decimal(18,0), @OBISValueHeaderID   decimal out , @Result              decimal(18,0) out, @ErrMSG              NVARchar(400) out as Begin try 	if not exists( Select * From OBISValueHeader where ReadDate=@ReadDate and MeterID=@MeterID and DeviceTypeID=@DeviceTypeID and SourceTypeID=@SourceTypeID ) 	begin 		select @OBISValueHeaderID=ISNULL(MAX(OBISValueHeaderID),0)+1 From OBISValueHeader 		INSERT INTO OBISValueHeader 		(			OBISValueHeaderID,			ReadDate,			DeviceTypeID,			UserID, 			TransferDate,			MeterID,			SourceTypeID,			valid		)		Values		(			@OBISValueHeaderID,			@ReadDate,			@DeviceTypeID,			@UserID,			@TransferDate,			@MeterID,			@SourceTypeID,			1		) 	end 	else 		Select @OBISValueHeaderID=OBISValueHeaderID From OBISValueHeader where ReadDate=@ReadDate and MeterID=@MeterID and DeviceTypeID=@DeviceTypeID  and SourceTypeID=@SourceTypeID end try Begin Catch 	set @Result=ERROR_NUMBER() Set @ErrMSG=ERROR_MESSAGE() end Catch ";

            scripts[51] = "ALTER proc [dbo].[ShowAllCreditTokenWithNecessary]\r\n@FromDate\tNvarchar(50),\r\n@ToDate\t\tNvarchar(50),\r\n@UserID\t   Decimal(18,0),\r\n@GroupID   Decimal(18,0),\r\n@GroupType  Decimal(18,0),\r\n@IsNecessary\tbit,\r\n@WithCredit\t\tbit,\r\n@Type\t\t\tbit,\r\n@LanguageID   Decimal(18,0) =2\r\nas\r\nif(@Type=1)\r\nbegin\r\n declare @UpNumber int,\r\n         @DownNumber int\r\n       \r\nif(@IsNecessary=1) \r\nbegin\r\n  set @UpNumber =71\r\n  set @DownNumber=55\r\nend\r\nelse  \r\nbegin\r\nset @DownNumber=0 \r\nset @UpNumber=56\r\nend\r\n\r\n if(@GroupID !=0)\r\n begin\r\n select distinct\r\n ISNULL(Meter.MeterID,0) MeterID,\r\n ISNULL(Meter.MeterNumber,0) MeterNumber,\r\nISNULL(OBISValueDetail.Value,'')Value ,\r\n Token.CreditValue,\r\n ISNULL(token.tokenid,0) TokenID,\r\n ISNULL(Customers.WatersubscriptionNumber,'')WatersubscriptionNumber,\r\n Isnull(Customers.customername,'')+' '+Isnull(Customers.Customerfamily,'') CustomerName,\r\n ISNULL(Token.CreditTransferModes,'')CreditTransferModes,\r\n ISNULL(credit_Capability_Activation,0)credit_Capability_Activation,\r\n ISNULL(creditStartDate,'')creditStartDate,\r\n ISNULL(disconnectivity_On_Negative_Credit,0)disconnectivity_On_Negative_Credit,\r\n ISNULL(disconnectivity_On_Expired_Credit,0)disconnectivity_On_Expired_Credit\r\n\r\n from Meter \r\n left join Customers on Customers.CustomerID=Meter.CustomerID \r\n inner join OBISValueHeader on OBISValueHeader.MeterID=Meter.MeterID\r\n inner join Token on Token.MeterID=Meter.MeterID\r\n inner join OBISValueDetail on OBISValueDetail.OBISValueHeaderID=OBISValueHeader.OBISValueHeaderID\r\n inner join OBISS on OBISS.OBISID=OBISValueDetail.OBISID\r\n \r\n  where Meter.Valid=1 and Meter.MeterID  in (select distinct MeterID from Token where convert(datetime,BuildDate) between @FromDate and  @ToDate)\r\n  and obiss.OBISID=83 and OBISS.Obis='0802010000ff'  and OBISValueHeader.OBISValueHeaderID in (select   max (OBISValueHeaderID ) from OBISValueHeader as obh where valid=1 group by MeterID)\r\n  and ((@IsNecessary=1 and SUBSTRING(Meter.MeterNumber,1,3)!='207') )  \r\n  and Meter.MeterID In(Select MeterID From MeterToGroup where MeterToGroup.GroupID=@GroupID and MeterToGroup.GroupType=@GroupType)\r\n  and Meter.MeterID In(Select MeterID From AccessUserToMeter  where AccessUserToMeter.UserID= @UserID )\r\n  and (@DownNumber<CAST(CONVERT(VARBINARY(1),substring(Token.CreditTransferModes,2,1)) AS INT) \r\n  and CAST(CONVERT(VARBINARY(1),upper(substring(Token.CreditTransferModes,2,1))) AS INT)<@UpNumber)\r\n  \r\n   group by token.MeterID,meter.MeterID,MeterNumber,token.CreditValue,Token.TokenID,Token.CreditTransferModes,\r\nToken.credit_Capability_Activation,Value,\r\nToken.creditStartDate,Token.disconnectivity_On_Negative_Credit,Token.disconnectivity_On_Expired_Credit,Customers.WatersubscriptionNumber\r\n,Customers.CustomerName,Customers.Customerfamily\r\n\r\n\r\n   union All\r\n   select distinct\r\n ISNULL(Meter.MeterID,0) MeterID,\r\n ISNULL(Meter.MeterNumber,0) MeterNumber,\r\nISNULL(OBISValueDetail.Value,'')Value ,\r\n Token.CreditValue,\r\n ISNULL(token.tokenid,0) TokenID,\r\n ISNULL(Customers.WatersubscriptionNumber,'')WatersubscriptionNumber,\r\n Isnull(Customers.customername,'')+' '+Isnull(Customers.Customerfamily,'') CustomerName,\r\n ISNULL(Token.CreditTransferModes,'')CreditTransferModes,\r\n ISNULL(credit_Capability_Activation,0)credit_Capability_Activation,\r\n ISNULL(creditStartDate,'')creditStartDate,\r\n ISNULL(disconnectivity_On_Negative_Credit,0)disconnectivity_On_Negative_Credit,\r\n ISNULL(disconnectivity_On_Expired_Credit,0)disconnectivity_On_Expired_Credit\r\n\r\n from Meter \r\n left join Customers on Customers.CustomerID=Meter.CustomerID \r\n inner join OBISValueHeader on OBISValueHeader.MeterID=Meter.MeterID\r\n  inner join Token on Token.MeterID=Meter.MeterID\r\n inner join OBISValueDetail on OBISValueDetail.OBISValueHeaderID=OBISValueHeader.OBISValueHeaderID\r\n inner join OBISS on OBISS.OBISID=OBISValueDetail.OBISID\r\n \r\n  where Meter.Valid=1 and Meter.MeterID  in (select distinct MeterID from Token where convert(datetime,BuildDate) between @FromDate and  @ToDate)\r\n  and obiss.OBISID=83 and OBISS.Obis='0802010000ff'    and OBISValueHeader.OBISValueHeaderID in (select   max (OBISValueHeaderID ) from OBISValueHeader as obh where valid=1 group by MeterID)\r\n    and ((@IsNecessary=0 and SUBSTRING(Meter.MeterNumber,1,3)!='207') )  \r\n  and Meter.MeterID In(Select MeterID From MeterToGroup where MeterToGroup.GroupID=@GroupID and MeterToGroup.GroupType=@GroupType)\r\n  and Meter.MeterID In(Select MeterID From AccessUserToMeter  where AccessUserToMeter.UserID= @UserID )\r\n   and (@DownNumber<CAST(CONVERT(VARBINARY(1),UPPER (substring(Token.CreditTransferModes,2,1))) AS INT) \r\n   and CAST(CONVERT(VARBINARY(1),UPPER (substring(Token.CreditTransferModes,2,1))) AS INT)<@UpNumber)\r\n   group by token.MeterID,meter.MeterID,MeterNumber,token.CreditValue,Token.TokenID,Token.CreditTransferModes,\r\nToken.credit_Capability_Activation,Value,\r\nToken.creditStartDate,Token.disconnectivity_On_Negative_Credit,Token.disconnectivity_On_Expired_Credit,Customers.WatersubscriptionNumber\r\n,Customers.CustomerName,Customers.Customerfamily\r\n\r\n\r\n   union All\r\n   select distinct\r\n ISNULL(Meter.MeterID,0) MeterID,\r\n ISNULL(Meter.MeterNumber,0) MeterNumber,\r\nISNULL(OBISValueDetail.Value,'')Value ,\r\n Token.CreditValue,\r\n ISNULL(token.tokenid,0) TokenID,\r\n ISNULL(Customers.WatersubscriptionNumber,'')WatersubscriptionNumber,\r\n Isnull(Customers.customername,'')+' '+Isnull(Customers.Customerfamily,'') CustomerName,\r\n ISNULL(Token.CreditTransferModes,'')CreditTransferModes,\r\n ISNULL(credit_Capability_Activation,0)credit_Capability_Activation,\r\n ISNULL(creditStartDate,'')creditStartDate,\r\n ISNULL(disconnectivity_On_Negative_Credit,0)disconnectivity_On_Negative_Credit,\r\n ISNULL(disconnectivity_On_Expired_Credit,0)disconnectivity_On_Expired_Credit\r\n\r\n from Meter \r\n left join Customers on Customers.CustomerID=Meter.CustomerID \r\n inner join OBISValueHeader on OBISValueHeader.MeterID=Meter.MeterID\r\n  inner join Token on Token.MeterID=Meter.MeterID\r\n inner join OBISValueDetail on OBISValueDetail.OBISValueHeaderID=OBISValueHeader.OBISValueHeaderID\r\n inner join OBISS on OBISS.OBISID=OBISValueDetail.OBISID\r\n \r\n  where Meter.Valid=1 and Meter.MeterID  in (select distinct MeterID from Token where convert(datetime,BuildDate) between @FromDate and  @ToDate)\r\n  and obiss.OBISID=83 and OBISS.Obis='0802010000ff'    and OBISValueHeader.OBISValueHeaderID in (select   max (OBISValueHeaderID ) from OBISValueHeader as obh where valid=1 group by MeterID)\r\n    and ((@IsNecessary=0 and SUBSTRING(Meter.MeterNumber,1,3)='207') )  \r\n  and Meter.MeterID In(Select MeterID From MeterToGroup where MeterToGroup.GroupID=@GroupID and MeterToGroup.GroupType=@GroupType)\r\n  and Meter.MeterID In(Select MeterID From AccessUserToMeter  where AccessUserToMeter.UserID= @UserID )\r\n   group by token.MeterID,meter.MeterID,MeterNumber,token.CreditValue,Token.TokenID,Token.CreditTransferModes,\r\nToken.credit_Capability_Activation,Value,\r\nToken.creditStartDate,Token.disconnectivity_On_Negative_Credit,Token.disconnectivity_On_Expired_Credit,Customers.WatersubscriptionNumber\r\n,Customers.CustomerName,Customers.Customerfamily\r\n\r\norder by MeterId\r\n  \r\n  \r\n  \r\n end \r\n else if(@GroupID=0)\r\n  begin\r\n select distinct\r\n ISNULL(Meter.MeterID,0) MeterID,\r\n ISNULL(Meter.MeterNumber,0) MeterNumber,\r\nISNULL(OBISValueDetail.Value,'')Value ,\r\n Token.CreditValue,\r\n ISNULL(token.tokenid,0) TokenID,\r\n ISNULL(Customers.WatersubscriptionNumber,'')WatersubscriptionNumber,\r\n Isnull(Customers.customername,'')+' '+Isnull(Customers.Customerfamily,'') CustomerName,\r\n ISNULL(Token.CreditTransferModes,'')CreditTransferModes,\r\n ISNULL(credit_Capability_Activation,0)credit_Capability_Activation,\r\n ISNULL(creditStartDate,'')creditStartDate,\r\n ISNULL(disconnectivity_On_Negative_Credit,0)disconnectivity_On_Negative_Credit,\r\n ISNULL(disconnectivity_On_Expired_Credit,0)disconnectivity_On_Expired_Credit\r\n\r\n from Meter \r\n left join Customers on Customers.CustomerID=Meter.CustomerID \r\n inner join OBISValueHeader on OBISValueHeader.MeterID=Meter.MeterID\r\n  inner join Token on Token.MeterID=Meter.MeterID\r\n inner join OBISValueDetail on OBISValueDetail.OBISValueHeaderID=OBISValueHeader.OBISValueHeaderID\r\n inner join OBISS on OBISS.OBISID=OBISValueDetail.OBISID\r\n \r\n where Meter.MeterID not in (select distinct MeterID from Token where convert(datetime,BuildDate) between @FromDate and  @ToDate)\r\n  and obiss.OBISID=83 and OBISS.Obis='0802010000ff'  and OBISValueHeader.OBISValueHeaderID in (select   max (OBISValueHeaderID ) from OBISValueHeader as obh where valid=1 group by MeterID)\r\n  and (@IsNecessary=1 and SUBSTRING(Meter.MeterNumber,1,3)!='207')  \r\n  and Meter.MeterID In(Select MeterID From AccessUserToMeter  where AccessUserToMeter.UserID= @UserID  )\r\n  and (@DownNumber< CAST(CONVERT(VARBINARY(1),upper(substring(Token.CreditTransferModes,2,1))) AS INT)\r\n  and CAST(CONVERT(VARBINARY(1),upper(substring(Token.CreditTransferModes,2,1))) AS INT)<@UpNumber)\r\n \r\n  group by token.MeterID,meter.MeterID,MeterNumber,token.CreditValue,Token.TokenID,Token.CreditTransferModes,\r\nToken.credit_Capability_Activation,Value,\r\nToken.creditStartDate,Token.disconnectivity_On_Negative_Credit,Token.disconnectivity_On_Expired_Credit,Customers.WatersubscriptionNumber\r\n,Customers.CustomerName,Customers.Customerfamily\r\n\r\n\r\n Union ALL\r\n  select distinct\r\n ISNULL(Meter.MeterID,0) MeterID,\r\n ISNULL(Meter.MeterNumber,0) MeterNumber,\r\nISNULL(OBISValueDetail.Value,'')Value ,\r\n Token.CreditValue,\r\n ISNULL(token.tokenid,0) TokenID,\r\n ISNULL(Customers.WatersubscriptionNumber,'')WatersubscriptionNumber,\r\n Isnull(Customers.customername,'')+' '+Isnull(Customers.Customerfamily,'') CustomerName,\r\n ISNULL(Token.CreditTransferModes,'')CreditTransferModes,\r\n ISNULL(credit_Capability_Activation,0)credit_Capability_Activation,\r\n ISNULL(creditStartDate,'')creditStartDate,\r\n ISNULL(disconnectivity_On_Negative_Credit,0)disconnectivity_On_Negative_Credit,\r\n ISNULL(disconnectivity_On_Expired_Credit,0)disconnectivity_On_Expired_Credit\r\n\r\n from Meter \r\n left join Customers on Customers.CustomerID=Meter.CustomerID \r\n inner join OBISValueHeader on OBISValueHeader.MeterID=Meter.MeterID\r\n inner join Token on Token.MeterID=Meter.MeterID\r\n inner join OBISValueDetail on OBISValueDetail.OBISValueHeaderID=OBISValueHeader.OBISValueHeaderID\r\n inner join OBISS on OBISS.OBISID=OBISValueDetail.OBISID\r\n \r\n where Meter.MeterID not in (select distinct MeterID from Token where convert(datetime,BuildDate) between @FromDate and  @ToDate)\r\n  and obiss.OBISID=83 and OBISS.Obis='0802010000ff'  and OBISValueHeader.OBISValueHeaderID in (select   max (OBISValueHeaderID ) from OBISValueHeader as obh where valid=1 group by MeterID)\r\n  and (@IsNecessary=0 and SUBSTRING(Meter.MeterNumber,1,3)='207') \r\n  and Meter.MeterID In(Select MeterID From AccessUserToMeter  where AccessUserToMeter.UserID= @UserID  )\r\n  group by token.MeterID,meter.MeterID,MeterNumber,token.CreditValue,Token.TokenID,Token.CreditTransferModes,\r\nToken.credit_Capability_Activation,Value,\r\nToken.creditStartDate,Token.disconnectivity_On_Negative_Credit,Token.disconnectivity_On_Expired_Credit,Customers.WatersubscriptionNumber\r\n,Customers.CustomerName,Customers.Customerfamily\r\n\r\n\r\n\r\n Union ALL\r\n  select distinct\r\n ISNULL(Meter.MeterID,0) MeterID,\r\n ISNULL(Meter.MeterNumber,0) MeterNumber,\r\nISNULL(OBISValueDetail.Value,'')Value ,\r\n Token.CreditValue,\r\n ISNULL(token.tokenid,0) TokenID,\r\n ISNULL(Customers.WatersubscriptionNumber,'')WatersubscriptionNumber,\r\n Isnull(Customers.customername,'')+' '+Isnull(Customers.Customerfamily,'') CustomerName,\r\n ISNULL(Token.CreditTransferModes,'')CreditTransferModes,\r\n ISNULL(credit_Capability_Activation,0)credit_Capability_Activation,\r\n ISNULL(creditStartDate,'')creditStartDate,\r\n ISNULL(disconnectivity_On_Negative_Credit,0)disconnectivity_On_Negative_Credit,\r\n ISNULL(disconnectivity_On_Expired_Credit,0)disconnectivity_On_Expired_Credit\r\n\r\n from Meter \r\n left join Customers on Customers.CustomerID=Meter.CustomerID \r\n inner join OBISValueHeader on OBISValueHeader.MeterID=Meter.MeterID\r\n inner join Token on Token.MeterID=Meter.MeterID\r\n inner join OBISValueDetail on OBISValueDetail.OBISValueHeaderID=OBISValueHeader.OBISValueHeaderID\r\n inner join OBISS on OBISS.OBISID=OBISValueDetail.OBISID\r\n \r\n where Meter.MeterID not in (select distinct MeterID from Token where convert(datetime,BuildDate) between @FromDate and  @ToDate)\r\n  and obiss.OBISID=83 and OBISS.Obis='0802010000ff'  and OBISValueHeader.OBISValueHeaderID in (select   max (OBISValueHeaderID ) from OBISValueHeader as obh where valid=1 group by MeterID)\r\n  and (@IsNecessary=0 and SUBSTRING(Meter.MeterNumber,1,3)<>'207') \r\n  and Meter.MeterID In(Select MeterID From AccessUserToMeter  where AccessUserToMeter.UserID= @UserID  )\r\n  and (@DownNumber<CAST(CONVERT(VARBINARY(1),upper(substring(Token.CreditTransferModes,2,1))) AS INT) \r\n  and CAST(CONVERT(VARBINARY(1),upper(substring(Token.CreditTransferModes,2,1))) AS INT)<@UpNumber)\r\n  group by token.MeterID,meter.MeterID,MeterNumber,token.CreditValue,Token.TokenID,Token.CreditTransferModes,\r\nToken.credit_Capability_Activation,Value,\r\nToken.creditStartDate,Token.disconnectivity_On_Negative_Credit,Token.disconnectivity_On_Expired_Credit,Customers.WatersubscriptionNumber\r\n,Customers.CustomerName,Customers.Customerfamily\r\n\r\norder by MeterId\r\n \r\n end \r\n end \r\n \r\n else if(@Type=0)\r\n begin\r\n if (@WithCredit =0 and @GroupID !=0)\r\n begin\r\nselect  distinct\r\nISNULL(Meter.MeterID,0) MeterID,\r\nISNULL(Meter.MeterNumber,0) MeterNumber,\r\nISNULL(OBISValueDetail.Value,'')Value ,\r\nToken.CreditValue,\r\nISNULL(Token.TokenID,0)as TokenID,\r\n ISNULL(Customers.WatersubscriptionNumber,'')WatersubscriptionNumber,\r\n Isnull(Customers.customername,'')+' '+Isnull(Customers.Customerfamily,'') CustomerName,\r\n ISNULL(Token.CreditTransferModes,'')CreditTransferModes,\r\n ISNULL(credit_Capability_Activation,0)credit_Capability_Activation,\r\n ISNULL(creditStartDate,'')creditStartDate,\r\n ISNULL(disconnectivity_On_Negative_Credit,0)disconnectivity_On_Negative_Credit,\r\n ISNULL(disconnectivity_On_Expired_Credit,0)disconnectivity_On_Expired_Credit\r\n from Meter \r\n left join Customers on Customers.CustomerID=Meter.CustomerID \r\n inner join OBISValueHeader on OBISValueHeader.MeterID=Meter.MeterID\r\n  inner join Token on Token.MeterID=Meter.MeterID\r\n inner join OBISValueDetail on OBISValueDetail.OBISValueHeaderID=OBISValueHeader.OBISValueHeaderID\r\n inner join OBISS on OBISS.OBISID=OBISValueDetail.OBISID\r\n\r\n \r\n where Meter.MeterID not in (select distinct MeterID from Token where convert(datetime,BuildDate) between @FromDate and  @ToDate )\r\n  and obiss.OBISID=83 and OBISS.Obis='0802010000ff'  and OBISValueHeader.OBISValueHeaderID in (select   max (OBISValueHeaderID ) from OBISValueHeader as obh where valid=1 group by MeterID)\r\n  and Meter.MeterID In(Select MeterID From MeterToGroup where MeterToGroup.GroupID=@GroupID and MeterToGroup.GroupType=@GroupType)\r\n  and Meter.MeterID In(Select MeterID From AccessUserToMeter  where AccessUserToMeter.UserID= @UserID )\r\n  \r\n   group by token.MeterID,meter.MeterID,MeterNumber,token.CreditValue,Token.TokenID,Token.CreditTransferModes,\r\nToken.credit_Capability_Activation,Value,\r\nToken.creditStartDate,Token.disconnectivity_On_Negative_Credit,Token.disconnectivity_On_Expired_Credit,Customers.WatersubscriptionNumber\r\n,Customers.CustomerName,Customers.Customerfamily\r\n\r\n\r\n  \r\n  union All\r\n  select distinct\r\n  ISNULL(Meter.MeterID,0) MeterID,\r\n  ISNULL(Meter.MeterNumber,0) MeterNumber,\r\nISNULL(OBISValueDetail.Value,'')Value ,\r\n  0,\r\n  0,\r\n  ISNULL(Customers.WatersubscriptionNumber,'')WatersubscriptionNumber,\r\n  Isnull(Customers.customername,'')+' '+Isnull(Customers.Customerfamily,'') CustomerName,\r\n  '',\r\n  0,\r\n  '',\r\n  0,\r\n  0\r\n  from Meter   \r\n  \r\n left join Customers on Customers.CustomerID=Meter.CustomerID \r\n inner join OBISValueHeader on OBISValueHeader.MeterID=Meter.MeterID\r\n inner join OBISValueDetail on OBISValueDetail.OBISValueHeaderID=OBISValueHeader.OBISValueHeaderID\r\n inner join OBISS on OBISS.OBISID=OBISValueDetail.OBISID \r\n\r\n where \r\n  obiss.OBISID=83 and OBISS.Obis='0802010000ff'  and OBISValueHeader.OBISValueHeaderID in (select   max (OBISValueHeaderID ) from OBISValueHeader as obh where valid=1 group by MeterID)\r\n  and Meter.MeterID not in(select distinct MeterID from Token where convert(datetime,BuildDate) between @FromDate and  @ToDate )\r\n  and Meter.MeterID In(Select MeterID From MeterToGroup where MeterToGroup.GroupID=@GroupID and MeterToGroup.GroupType=@GroupType )\r\n  and Meter.MeterID In(Select MeterID From AccessUserToMeter  where AccessUserToMeter.UserID= @UserID  )\r\n  \r\n   group by meter.MeterID,MeterNumber,Customers.WatersubscriptionNumber\r\n,Value,Customers.CustomerName,Customers.Customerfamily\r\n\r\n\r\n  \r\n  Union All\r\n  select distinct\r\n  ISNULL(Meter.MeterID,0) MeterID,\r\n  ISNULL(Meter.MeterNumber,0) MeterNumber,\r\n  '0',\r\n  0,\r\n  0,\r\n  '',\r\n  Isnull(Customers.customername,'')+' '+Isnull(Customers.Customerfamily,'') CustomerName,\r\n  '',\r\n  0,\r\n  '',\r\n  0,\r\n  0\r\n  from Meter   \r\n  left join Customers on Customers.CustomerID=Meter.CustomerID \r\n  where \r\n  Meter.MeterID not in(select distinct MeterID from Token where convert(datetime,BuildDate) between @FromDate and  @ToDate )\r\n  and Meter.MeterID In(Select MeterID From MeterToGroup where MeterToGroup.GroupID=@GroupID and MeterToGroup.GroupType=@GroupType )\r\n  and Meter.MeterID In(Select MeterID From AccessUserToMeter  where AccessUserToMeter.UserID= @UserID  ) \r\n    \r\n     group by meter.MeterID,MeterNumber,Customers.WatersubscriptionNumber\r\n,Customers.CustomerName,Customers.Customerfamily\r\n\r\norder by MeterId\r\n    \r\n end\r\n else if(@GroupID !=0)\r\n begin\r\n select distinct\r\n ISNULL(Meter.MeterID,0) MeterID,\r\n ISNULL(Meter.MeterNumber,0) MeterNumber,\r\nISNULL(OBISValueDetail.Value,'')Value ,\r\n Token.CreditValue,\r\n ISNULL(token.tokenid,0) TokenID,\r\n ISNULL(Customers.WatersubscriptionNumber,'')WatersubscriptionNumber,\r\n Isnull(Customers.customername,'')+' '+Isnull(Customers.Customerfamily,'') CustomerName,\r\n ISNULL(Token.CreditTransferModes,'')CreditTransferModes,\r\n ISNULL(credit_Capability_Activation,0)credit_Capability_Activation,\r\n ISNULL(creditStartDate,'')creditStartDate,\r\n ISNULL(disconnectivity_On_Negative_Credit,0)disconnectivity_On_Negative_Credit,\r\n ISNULL(disconnectivity_On_Expired_Credit,0)disconnectivity_On_Expired_Credit\r\n\r\n from Meter \r\n left join Customers on Customers.CustomerID=Meter.CustomerID \r\n inner join OBISValueHeader on OBISValueHeader.MeterID=Meter.MeterID\r\n  inner join Token on Token.MeterID=Meter.MeterID\r\n inner join OBISValueDetail on OBISValueDetail.OBISValueHeaderID=OBISValueHeader.OBISValueHeaderID\r\n inner join OBISS on OBISS.OBISID=OBISValueDetail.OBISID\r\n \r\n where Meter.Valid=1 and Meter.MeterID  in (select distinct MeterID from Token where convert(datetime,BuildDate) between @FromDate and  @ToDate)\r\n  and obiss.OBISID=83 and OBISS.Obis='0802010000ff'   and OBISValueHeader.OBISValueHeaderID in (select   max (OBISValueHeaderID ) from OBISValueHeader as obh where valid=1 group by MeterID)\r\n  and Meter.MeterID In(Select MeterID From MeterToGroup where MeterToGroup.GroupID=@GroupID and MeterToGroup.GroupType=@GroupType)\r\n  and Meter.MeterID In(Select MeterID From AccessUserToMeter  where AccessUserToMeter.UserID= @UserID  )\r\n  \r\n   group by token.MeterID,meter.MeterID,MeterNumber,token.CreditValue,Token.TokenID,Token.CreditTransferModes,\r\nToken.credit_Capability_Activation,Value,\r\nToken.creditStartDate,Token.disconnectivity_On_Negative_Credit,Token.disconnectivity_On_Expired_Credit,Customers.WatersubscriptionNumber\r\n,Customers.CustomerName,Customers.Customerfamily\r\n\r\norder by MeterId\r\n  \r\n end \r\n else if(@GroupID=0 and @WithCredit =1 )\r\n  begin\r\n select distinct\r\n ISNULL(Meter.MeterID,0) MeterID,\r\n ISNULL(Meter.MeterNumber,0) MeterNumber,\r\nISNULL(OBISValueDetail.Value,'')Value ,\r\n Token.CreditValue,\r\n ISNULL(token.tokenid,0) TokenID,\r\n ISNULL(Customers.WatersubscriptionNumber,'')WatersubscriptionNumber,\r\n Isnull(Customers.customername,'')+' '+Isnull(Customers.Customerfamily,'') CustomerName,\r\n ISNULL(Token.CreditTransferModes,'')CreditTransferModes,\r\n ISNULL(credit_Capability_Activation,0)credit_Capability_Activation,\r\n ISNULL(creditStartDate,'')creditStartDate,\r\n ISNULL(disconnectivity_On_Negative_Credit,0)disconnectivity_On_Negative_Credit,\r\n ISNULL(disconnectivity_On_Expired_Credit,0)disconnectivity_On_Expired_Credit\r\n\r\n from Meter \r\n left join Customers on Customers.CustomerID=Meter.CustomerID \r\n inner join OBISValueHeader on OBISValueHeader.MeterID=Meter.MeterID\r\n  inner join Token on Token.MeterID=Meter.MeterID\r\n inner join OBISValueDetail on OBISValueDetail.OBISValueHeaderID=OBISValueHeader.OBISValueHeaderID\r\n inner join OBISS on OBISS.OBISID=OBISValueDetail.OBISID\r\n\r\n \r\n where Meter.MeterID not in (select distinct MeterID from Token where convert(datetime,BuildDate) between @FromDate and  @ToDate)\r\n  and obiss.OBISID=83 and OBISS.Obis='0802010000ff'    and OBISValueHeader.OBISValueHeaderID in (select   max (OBISValueHeaderID ) from OBISValueHeader as obh where valid=1 group by MeterID)\r\n  and Meter.MeterID In(Select MeterID From AccessUserToMeter  where AccessUserToMeter.UserID= @UserID  )\r\n  \r\n   group by token.MeterID,meter.MeterID,MeterNumber,token.CreditValue,Token.TokenID,Token.CreditTransferModes,\r\nToken.credit_Capability_Activation,Value,\r\nToken.creditStartDate,Token.disconnectivity_On_Negative_Credit,Token.disconnectivity_On_Expired_Credit,Customers.WatersubscriptionNumber\r\n,Customers.CustomerName,Customers.Customerfamily\r\n\r\norder by MeterId\r\n  \r\n  \r\n end \r\n else if(@GroupID=0 and @WithCredit =0)\r\n begin\r\nselect  distinct\r\nISNULL(Meter.MeterID,0) MeterID,\r\nISNULL(Meter.MeterNumber,0) MeterNumber,\r\nISNULL(OBISValueDetail.Value,'')Value ,\r\nToken.CreditValue,\r\n ISNULL(Customers.WatersubscriptionNumber,'')WatersubscriptionNumber,\r\n Isnull(Customers.customername,'')+' '+Isnull(Customers.Customerfamily,'') CustomerName,\r\n ISNULL(Token.CreditTransferModes,'')CreditTransferModes,\r\n ISNULL(credit_Capability_Activation,0)credit_Capability_Activation,\r\n ISNULL(creditStartDate,'')creditStartDate,\r\n ISNULL(disconnectivity_On_Negative_Credit,0)disconnectivity_On_Negative_Credit,\r\n ISNULL(disconnectivity_On_Expired_Credit,0)disconnectivity_On_Expired_Credit\r\n from Meter \r\n left join Customers on Customers.CustomerID=Meter.CustomerID \r\n inner join OBISValueHeader on OBISValueHeader.MeterID=Meter.MeterID\r\n  inner join Token on Token.MeterID=Meter.MeterID\r\n inner join OBISValueDetail on OBISValueDetail.OBISValueHeaderID=OBISValueHeader.OBISValueHeaderID\r\n inner join OBISS on OBISS.OBISID=OBISValueDetail.OBISID\r\n \r\n where Meter.MeterID not in (select distinct MeterID from Token where convert(datetime,BuildDate) between @FromDate and  @ToDate )\r\n  and obiss.OBISID=83 and OBISS.Obis='0802010000ff'  and OBISValueHeader.OBISValueHeaderID in (select   max (OBISValueHeaderID ) from OBISValueHeader as obh where valid=1 group by MeterID)\r\n  and Meter.MeterID In(Select MeterID From AccessUserToMeter  where AccessUserToMeter.UserID= @UserID )\r\n  \r\n   group by token.MeterID,meter.MeterID,MeterNumber,token.CreditValue,Token.TokenID,Token.CreditTransferModes,\r\nToken.credit_Capability_Activation,Value,\r\nToken.creditStartDate,Token.disconnectivity_On_Negative_Credit,Token.disconnectivity_On_Expired_Credit,Customers.WatersubscriptionNumber\r\n,Customers.CustomerName,Customers.Customerfamily\r\n\r\n  \r\n  union All\r\n  select distinct\r\n  ISNULL(Meter.MeterID,0) MeterID,\r\n  ISNULL(Meter.MeterNumber,0) MeterNumber,\r\nISNULL(OBISValueDetail.Value,'')Value ,\r\n  0,\r\n  ISNULL(Customers.WatersubscriptionNumber,'')WatersubscriptionNumber,\r\n  Isnull(Customers.customername,'')+' '+Isnull(Customers.Customerfamily,'') CustomerName,\r\n  '',\r\n  0,\r\n  '',\r\n  0,\r\n  0\r\n  from Meter   \r\n  \r\n left join Customers on Customers.CustomerID=Meter.CustomerID \r\n inner join OBISValueHeader on OBISValueHeader.MeterID=Meter.MeterID\r\n inner join OBISValueDetail on OBISValueDetail.OBISValueHeaderID=OBISValueHeader.OBISValueHeaderID\r\n inner join OBISS on OBISS.OBISID=OBISValueDetail.OBISID \r\n\r\n where \r\n  obiss.OBISID=83 and OBISS.Obis='0802010000ff' and OBISValueHeader.OBISValueHeaderID in (select   max (OBISValueHeaderID ) from OBISValueHeader as obh where valid=1 group by MeterID)\r\n  and Meter.MeterID not in(select distinct MeterID from Token where convert(datetime,BuildDate) between @FromDate and  @ToDate )\r\n  and Meter.MeterID In(Select MeterID From AccessUserToMeter  where AccessUserToMeter.UserID= @UserID  )\r\n  \r\n   group by meter.MeterID,MeterNumber,Customers.WatersubscriptionNumber\r\n,Value,Customers.CustomerName,Customers.Customerfamily\r\n\r\norder by MeterId\r\n  \r\n end\r\n \r\n end";

            scripts[52] = "Delete VeeConsumedWater \r\n DBCC CHECKIDENT ('VeeConsumedWater', RESEED, 1)";

            #endregion Old 

            #region 1.2.1.0
            // اطلاعات مورد نیاز برای ذخیره سازی مدیریت شارژها
            scripts[53] = "CREATE TABLE [dbo].[CreditInfo]( 	[Id] [decimal](18, 0) IDENTITY(1,1) NOT NULL,	[CustomeriD] [decimal](18, 0) NOT NULL,	[CreditType] [int] NOT NULL,	[StartDate] [nvarchar](50) NULL,	[EndDate] [nvarchar](50) NULL,	[UserId] [decimal](18, 0) NULL,	[CreateDate] [nvarchar](50) NULL,	[IsNeedToConfirm] [bit] NULL,	[ConfirmDate] [nvarchar](50) NULL,	[ConfirmUserId] [decimal](18, 0) NULL,	[TransferCredit] [decimal](18, 0) NULL,	[Credit] [decimal](18, 0) NULL,	[SendToMeterConfirm] [bit] NULL,	[Desc] [nvarchar](100) NULL, CONSTRAINT [PK_CreditInfo] PRIMARY KEY CLUSTERED (	[Id] ASC)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]) ON [PRIMARY] GO";
            scripts[54] = "create Proc [dbo].[ShowCreditInfo] @Filter Nvarchar(400) as Exec (' select  * from CreditInfo where 1=1 '+@Filter)";
            scripts[55] = "create Proc [dbo].[INSCreditInfo] @CustomeriD decimal(18, 0) ,	@CreditType int  ,   @StartDate nvarchar(50)  ,	@EndDate nvarchar(50)  ,	@UserId decimal(18, 0)  ,	@CreateDate nvarchar(50)  ,	@IsNeedToConfirm bit,   @ConfirmDate nvarchar(50)  ,	@ConfirmUserId decimal(18, 0)  ,	@TransferCredit decimal(18, 0)  ,	@Credit decimal(18, 0)  ,	@SendToMeterConfirm bit,   @Desc nvarchar(200),	@CardID			   Decimal(18,0) out,@Result			   decimal(18,0) out,@ErrMSG            Nvarchar(400) out as begin try			INSERT INTO [SabaCandH].[dbo].[CreditInfo]           ([CustomeriD]           ,[CreditType]            ,[StartDate]           ,[EndDate]           ,[UserId]           ,[CreateDate]           ,[IsNeedToConfirm]           ,[ConfirmDate]           ,[ConfirmUserId]           ,[TransferCredit]           ,[Credit]           ,[SendToMeterConfirm]           ,[Desc])      VALUES            (@CustomeriD  ,	@CreditType   ,   @StartDate   ,	@EndDate   ,	@UserId   ,	@CreateDate   ,	@IsNeedToConfirm ,   @ConfirmDate   ,	@ConfirmUserId   ,	@TransferCredit   ,	@Credit   ,	@SendToMeterConfirm ,   @Desc )		 	 end try begin catch 	set @Result=ERROR_NUMBER() Set @ErrMSG=ERROR_MESSAGE() end catch";
            #endregion

   
	


        }


        public void FillWaterConsumption303Scripts()
        {
            WaterConsumption303Scripts[0] = "IF OBJECT_ID(N'dbo.WaterConsumption303', N'U') IS  NULL BEGIN create TABLE [dbo].[WaterConsumption303](	[WaterConsumption303Id] [decimal](18, 0) IDENTITY(1,1) NOT NULL,	[MeterId] [decimal](18, 0) NOT NULL,	[ConsumedDate] [nvarchar](50) NOT NULL,	[TotalWater] [nvarchar](50) NULL,	[CurrentWater] [nvarchar](50) NULL,	[TotalHour] [nvarchar](50) NULL, CONSTRAINT [PK_WaterConsumption303] PRIMARY KEY CLUSTERED (	[WaterConsumption303Id] ASC)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]) ON [PRIMARY] ALTER TABLE [dbo].[WaterConsumption303]  WITH CHECK ADD  CONSTRAINT [FK_WaterConsumption303_Meter] FOREIGN KEY([MeterId]) REFERENCES [dbo].[Meter] ([MeterID])   ALTER TABLE [dbo].[WaterConsumption303] CHECK CONSTRAINT [FK_WaterConsumption303_Meter] END";
            WaterConsumption303Scripts[1] = "select * into #tempConsumption from  (select  m.MeterNumber, ovh.MeterID,  o.OBISID,  o.ObisLatinDesc, ObisFarsiDesc, ReadDate, case when o.OBISID=595 then   case when Value= 'RSASEWM303L0D3093002' then '3093002'      when Value= 'RSASEWM303L0D4120903' then '4120903'     when Value= 'RSASEWM303L0I3093002' then '3093002'      when Value= 'RSASEWM303L0I4120903' then '4120903'     when Value= 'RSASEWM303L0I6112104' then '6112104'        else '1' end    else   caST (Value AS float)  end AS       Value   from OBISValueHeader as ovh       inner join OBISValueDetail as ovd on ovd.OBISValueHeaderID=ovh.OBISValueHeaderID inner join OBISS as o       on o.OBISID=ovd.OBISID inner join Meter as m on m.MeterID=ovh.MeterID where  ((o.OBISID>702  and o.OBISID<754 and o.ObisFarsiDesc like '%ساعت%')        or o.OBISID in (701 ,702,595) or (o.OBISID=83 or o.ObisFarsiDesc like '%کل%' or o.OBISID=88)) and m.MeterNumber like '19%'         ) as t ";
            WaterConsumption303Scripts[2] = "select * into #tempConsumption2 FROM ( SELECT [meternumber], [ReadDate],[ObisFarsiDesc], [Value] FROM #tempConsumption ) AS SourceTable PIVOT(AVG([Value]) FOR [ObisFarsiDesc] IN([ويرايش برنامه],[آب مصرفی کل  ] ,[آب مصرفی ماه جاری ],[آب مصرفي کل تا دوره1],[آب مصرفي کل تا دوره2],[آب مصرفي کل تا دوره3],[آب مصرفي کل تا دوره4],[آب مصرفي کل تا دوره5],[آب مصرفي کل تا دوره6],[آب مصرفي کل تا دوره7],[آب مصرفي کل تا دوره8],[آب مصرفي کل تا دوره9],[آب مصرفي کل تا دوره10],[آب مصرفي کل تا دوره11],[آب مصرفي کل تا دوره12],[آب مصرفي کل تا دوره13],[آب مصرفي کل تا دوره14],[آب مصرفي کل تا دوره15],[آب مصرفي کل تا دوره16],[آب مصرفي کل تا دوره17],[آب مصرفي کل تا دوره18],[آب مصرفي کل تا دوره19],[آب مصرفي کل تا دوره20],[آب مصرفي کل تا دوره21],[آب مصرفي کل تا دوره22],[آب مصرفي کل تا دوره23],[آب مصرفي کل تا دوره24],[ساعات كاركرد الکتروپمپ ],[ساعت كاركرد تا دوره1],[ساعت كاركرد تا دوره2],[ساعت كاركرد تا دوره3],[ساعت كاركرد تا دوره4],[ساعت كاركرد تا دوره5],[ساعت كاركرد تا دوره6],[ساعت كاركرد تا دوره7],[ساعت كاركرد تا دوره8],[ساعت كاركرد تا دوره9],[ساعت كاركرد تا دوره10],[ساعت كاركرد تا دوره11],[ساعت كاركرد تا دوره12],[ساعت كاركرد تا دوره13],[ساعت كاركرد تا دوره14],[ساعت كاركرد تا دوره15],[ساعت كاركرد تا دوره16],[ساعت كاركرد تا دوره17],[ساعت كاركرد تا دوره18],[ساعت كاركرد تا دوره19],[ساعت كاركرد تا دوره20],[ساعت كاركرد تا دوره21],[ساعت كاركرد تا دوره22],[ساعت كاركرد تا دوره23],[ساعت كاركرد تا دوره24])) AS PivotTable";
            WaterConsumption303Scripts[3] = "select distinct * from #tempConsumption2 where #tempConsumption2 .[آب مصرفی کل  ] is not  null and #tempConsumption2 .[آب مصرفی ماه جاری ] is not  null order by MeterNumber,ReadDate";
            WaterConsumption303Scripts[4] = " drop table #tempConsumption";
            WaterConsumption303Scripts[5] = "drop table #tempConsumption2";
        }


        public void RunScripts(string connectionString)
        {
            try
            {


                for (int i = 0; i < scripts.Length; i++)
                //foreach (var item in scripts)
                {
                    if (string.IsNullOrEmpty(scripts[i]))
                        continue;

                    string script = scripts[i].Replace("GO", " ").Replace("\r\n", " ");
                    try
                    {
                        SqlConnection conn = new SqlConnection(connectionString);
                        conn.Open();
                        SqlCommand cmd = new SqlCommand(script, conn)
                        {
                            CommandTimeout = 40000,
                            CommandType = CommandType.Text
                        };
                        cmd.ExecuteNonQuery();
                        conn.Close();
                        conn.Dispose();
                    }
                    catch (Exception e)
                    {
                        try
                        {
                            if (e.ToString().Contains("There is already an object named") && script.ToLower().Contains("create"))
                            {
                                script = script.ToLower().Replace("create", "alter");
                            }

                            SqlConnection conn = new SqlConnection(connectionString);
                            conn.Open();
                            SqlCommand cmd = new SqlCommand(script, conn);
                            cmd.CommandTimeout = 40000;
                            cmd.CommandType = CommandType.Text;
                            cmd.ExecuteNonQuery();
                            conn.Close();
                            conn.Dispose();

                        }
                        catch (Exception ex)
                        {
                            //string currentDirectory = System.IO.Path.GetDirectoryName(Assembly.GetEntryAssembly().Location);
                            //string archiveFolder = System.IO.Path.Combine(currentDirectory, "Error In Sps.txt");
                            //File.WriteAllText(archiveFolder, " Error in :" + script + "\r\n");
                        }
                    }
                }
            }
            catch
            {
            }
        }
    }
}
