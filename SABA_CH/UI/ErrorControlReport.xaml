<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:DataGridFilterLibrary="clr-namespace:DataGridFilterLibrary;assembly=DataGridFilterLibrary"
        xmlns:Custom="http://schemas.microsoft.com/wpf/2008/toolkit"
        xmlns:filter="clr-namespace:DataGridFilterLibrary;assembly=DataGridFilterLibrary"
        x:Class="SABA_CH.UI.ErrorControlReport"
        xmlns:local="clr-namespace:SABA_CH"       
        xmlns:persianDateControls="clr-namespace:Arash.PersianDateControls;assembly=PersianDateControls"        
        xmlns:self="clr-namespace:SABA_CH"
        Title="ErrorControlReport" Height="861.194" Width="1258.208" ShowInTaskbar="False" Activated="Window_Activated" Closing="Window_Closing" SizeChanged="Window_SizeChanged"   FontFamily="Tahoma"   WindowStartupLocation="CenterOwner">
    <Window.Resources>
        <self:DateTimeToPersianDateConverter x:Key="dateToPersianDateConverter"/>
    </Window.Resources>
    <Grid x:Name="GridMain" FlowDirection="RightToLeft">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="13*"/>
            <ColumnDefinition Width="5"/>
            <ColumnDefinition Width="60*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.Background>
            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#FFD7E8FC" Offset="0" />
                <GradientStop Color="#FF95B7E8" Offset="1" />
                <GradientStop Color="#FF96B7E8" Offset="0.987"/>
            </LinearGradientBrush>
        </Grid.Background>

        <ToolBar FlowDirection="LeftToRight" x:Name="toolBar1" Margin="0" Grid.ColumnSpan="3">
            <ToolBar.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="White" Offset="0" />
                    <GradientStop Color="White" Offset="1" />
                </LinearGradientBrush>
            </ToolBar.Background>
            <Grid Background="White" Width="42">
                <Grid.RowDefinitions>
                    <RowDefinition Height="25*"/>
                    <RowDefinition Height="15*"/>
                </Grid.RowDefinitions>
                <Label Content="Refresh" Grid.Row="1" FontSize="8" Height="20" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontWeight="Bold"/>
                <Button  x:Name="ToolStripButtonRefresh" ToolTip="Refresh" Click="ToolStripButtonRefresh_Click" TabIndex="11" Background="{x:Null}">
                    <Image Source="/Saba;component/Image/refresh.png" Stretch="Fill" />
                </Button>
            </Grid>
            <Grid Background="White" Width="42">
                <Grid.RowDefinitions>
                    <RowDefinition Height="25*"/>
                    <RowDefinition Height="15*"/>
                </Grid.RowDefinitions>
                <Label Content="Excel" Grid.Row="1" FontSize="8" Height="20" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontWeight="Bold"/>
                <Button  x:Name="ToolStripButtonExport" ToolTip="Import From File"  TabIndex="12" Background="{x:Null}" Click="ToolStripButtonExport_Click">
                    <Image Source="/Saba;component/Image/application_vnd_ms_excel.ico" Stretch="Fill" />
                </Button>
            </Grid>
            <Separator Margin="0,5,0,-5" />
        </ToolBar>

        <DataGrid 
			x:Name="DatagridGeneral"
			 AutoGenerateColumns="False" AlternatingRowBackground="#FFBEBAE0"  IsReadOnly="True" Margin="0" Grid.Row="1" Background="White" SelectedIndex="0" Grid.Column="2" BorderThickness="0.5"
             FontWeight="Normal">
            <!--<DataGrid.CellStyle>
                <Style TargetType="{x:Type DataGridCell}">
                    <Setter Property="Background">
                        <Setter.Value>
                            <MultiBinding
                Converter="{StaticResource converter}" >
                                <MultiBinding.Bindings>
                                    <Binding RelativeSource="{RelativeSource Self}"/>
                                    <Binding Path="." />
                                </MultiBinding.Bindings>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </Style>
            </DataGrid.CellStyle>-->
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding MeterNumber}" Width="*" />
                <DataGridTextColumn Binding="{Binding ReadDate}" Width="*" />
                <!--<DataGridTextColumn Binding="{Binding SourceTypeName}"  Width="*"/>-->
                <DataGridCheckBoxColumn Binding="{Binding Disconnect}"  Width="*">
                    <DataGridCheckBoxColumn.CellStyle>
                        <Style  TargetType="DataGridCell">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <CheckBox x:Name="cb"
                              IsChecked="{Binding Disconnect, UpdateSourceTrigger=PropertyChanged}" 
                              VerticalAlignment="Center" 
                              HorizontalAlignment="Center" MouseDown="cb_MouseDown" IsHitTestVisible="False" />
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Disconnect, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                    <Setter Property="Background" Value="Orange"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridCheckBoxColumn.CellStyle>
                </DataGridCheckBoxColumn>
                <DataGridCheckBoxColumn Binding="{Binding ExpiryDate}"  Width="*">
                    <DataGridCheckBoxColumn.CellStyle>
                        <Style  TargetType="DataGridCell">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <CheckBox x:Name="cb"
                              IsChecked="{Binding ExpiryDate, UpdateSourceTrigger=PropertyChanged}" 
                              VerticalAlignment="Center" 
                              HorizontalAlignment="Center" MouseDown="cb_MouseDown" IsHitTestVisible="False" />
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ExpiryDate, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                    <Setter Property="Background" Value="Orange"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridCheckBoxColumn.CellStyle>
                </DataGridCheckBoxColumn>
                
                <DataGridCheckBoxColumn Binding="{Binding Overdrafts}"  Width="*">
                    <DataGridCheckBoxColumn.CellStyle>
                        <Style  TargetType="DataGridCell">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <CheckBox x:Name="cb"
                              IsChecked="{Binding Overdrafts, UpdateSourceTrigger=PropertyChanged}" 
                              VerticalAlignment="Center" 
                              HorizontalAlignment="Center" MouseDown="cb_MouseDown" IsHitTestVisible="False" />
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Overdrafts, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                    <Setter Property="Background" Value="Orange"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridCheckBoxColumn.CellStyle>
                </DataGridCheckBoxColumn>                
                <DataGridCheckBoxColumn Binding="{Binding HasCurrentWithDisconnect}"  Width="*">
                    <DataGridCheckBoxColumn.CellStyle>
                        <Style  TargetType="DataGridCell">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <CheckBox x:Name="cb"
                              IsChecked="{Binding HasCurrentWithDisconnect, UpdateSourceTrigger=PropertyChanged}" 
                              VerticalAlignment="Center" 
                              HorizontalAlignment="Center" MouseDown="cb_MouseDown" IsHitTestVisible="False" />
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding HasCurrentWithDisconnect, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                    <Setter Property="Background" Value="Orange"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridCheckBoxColumn.CellStyle>
                </DataGridCheckBoxColumn>
                <DataGridCheckBoxColumn Binding="{Binding BaRand}"  Width="*">
                    <DataGridCheckBoxColumn.CellStyle>
                        <Style  TargetType="DataGridCell">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <CheckBox x:Name="cb"
                              IsChecked="{Binding BaRand, UpdateSourceTrigger=PropertyChanged}" 
                              VerticalAlignment="Center" 
                              HorizontalAlignment="Center" MouseDown="cb_MouseDown" IsHitTestVisible="False" />
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding BaRand, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                    <Setter Property="Background" Value="Orange"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridCheckBoxColumn.CellStyle>
                </DataGridCheckBoxColumn>
                <DataGridCheckBoxColumn Binding="{Binding OpenMeterDoor}"  Width="*">
                    <DataGridCheckBoxColumn.CellStyle>
                        <Style  TargetType="DataGridCell">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <CheckBox x:Name="cb"
                              IsChecked="{Binding OpenMeterDoor, UpdateSourceTrigger=PropertyChanged}" 
                              VerticalAlignment="Center" 
                              HorizontalAlignment="Center" MouseDown="cb_MouseDown" IsHitTestVisible="False" />
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding OpenMeterDoor, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                    <Setter Property="Background" Value="Orange"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridCheckBoxColumn.CellStyle>
                </DataGridCheckBoxColumn>
                <DataGridCheckBoxColumn Binding="{Binding OpenTerminalDoor}"  Width="*">
                    <DataGridCheckBoxColumn.CellStyle>
                        <Style  TargetType="DataGridCell">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <CheckBox x:Name="cb"
                              IsChecked="{Binding OpenTerminalDoor, UpdateSourceTrigger=PropertyChanged}" 
                              VerticalAlignment="Center" 
                              HorizontalAlignment="Center" MouseDown="cb_MouseDown" IsHitTestVisible="False" />
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding OpenTerminalDoor, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                    <Setter Property="Background" Value="Orange"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridCheckBoxColumn.CellStyle>
                </DataGridCheckBoxColumn>
                <DataGridCheckBoxColumn Binding="{Binding HasCurrentWithoutVolt}"  Width="*">
                    <DataGridCheckBoxColumn.CellStyle>
                        <Style  TargetType="DataGridCell">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <CheckBox x:Name="cb"
                              IsChecked="{Binding HasCurrentWithoutVolt, UpdateSourceTrigger=PropertyChanged}" 
                              VerticalAlignment="Center" 
                              HorizontalAlignment="Center" MouseDown="cb_MouseDown" IsHitTestVisible="False" />
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding HasCurrentWithoutVolt, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                    <Setter Property="Background" Value="Orange"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridCheckBoxColumn.CellStyle>
                </DataGridCheckBoxColumn>
                <DataGridCheckBoxColumn Binding="{Binding BatteryLow}"  Width="*">
                    <DataGridCheckBoxColumn.CellStyle>
                        <Style  TargetType="DataGridCell">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <CheckBox x:Name="cb"
                              IsChecked="{Binding BatteryLow, UpdateSourceTrigger=PropertyChanged}" 
                              VerticalAlignment="Center" 
                              HorizontalAlignment="Center" MouseDown="cb_MouseDown" IsHitTestVisible="False" />
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding BatteryLow, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                    <Setter Property="Background" Value="Orange"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridCheckBoxColumn.CellStyle>
                </DataGridCheckBoxColumn>
                <DataGridCheckBoxColumn Binding="{Binding MeterError}"  Width="*">
                    <DataGridCheckBoxColumn.CellStyle>
                        <Style  TargetType="{x:Type DataGridCell}">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <CheckBox x:Name="cb"
											IsChecked="{Binding MeterError, UpdateSourceTrigger=PropertyChanged}" 
											VerticalAlignment="Center" 
											HorizontalAlignment="Center" MouseDown="cb_MouseDown" IsHitTestVisible="False" />
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding MeterError, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                    <Setter Property="Background" Value="Orange"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridCheckBoxColumn.CellStyle>
                </DataGridCheckBoxColumn>
            </DataGrid.Columns>
        </DataGrid>
        <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" Grid.Row="1" >

        </GridSplitter>
        <Grid x:Name="gridchk" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="39"/>
                <RowDefinition Height="39"/>
                <RowDefinition Height="39"/>
                <RowDefinition/>
                <RowDefinition Height="30"/>
            </Grid.RowDefinitions>
            <GroupBox Grid.RowSpan="3" Padding="1,1,0,1" BorderThickness="1" BorderBrush="#FFF9F489" Foreground="{x:Null}" Margin="0,0,0,28">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                    </Grid.RowDefinitions>
                    <CheckBox x:Name="chkor" Content="{Binding Object15}" Margin="10,5,0,0" Padding="6,0,0,0" Checked="chkor_Checked" Unchecked="chkor_Unchecked" Foreground="#FFB95CEE"/>
                    <CheckBox x:Name="chkand" Content="{Binding Object14}" Margin="10,5,0,0" Padding="6,0,0,0" Grid.Row="1" Checked="chkand_Checked" Unchecked="chkand_Unchecked" Foreground="#FFB95CEE"/>
                </Grid>
            </GroupBox>
            <CheckBox x:Name="chkDisconnect" Content="{Binding Object5}" Margin="10,7,0,0" Padding="6,0,0,0" Checked="chkDisconnect_Checked" Unchecked="chkDisconnect_Unchecked" Grid.Row="2"/>
            <CheckBox x:Name="chkExpiryDate" Content="{Binding Object6}" Margin="10,7,0,26" Width="Auto" Padding="6,0,0,0" Checked="chkDisconnect_Checked" Unchecked="chkDisconnect_Unchecked" Grid.Row="3" Grid.RowSpan="2"/>
            <CheckBox x:Name="chkOverdrafts" Content="{Binding Object7}" Height="22" Margin="10,8,10,0" Grid.Row="4" Padding="6,0,0,0" Checked="chkDisconnect_Checked" Unchecked="chkDisconnect_Unchecked"/>
            <CheckBox x:Name="chkHasCurrentWithDisconnect" Content="{Binding Object8}" Margin="10,7,0,0" Width="Auto" Padding="6,0,0,0" Checked="chkDisconnect_Checked" Unchecked="chkDisconnect_Unchecked" Grid.Row="5" Height="22"/>
            <CheckBox x:Name="chkBaRand" Content="{Binding Object9}" Margin="10,7,0,0" Grid.Row="6" Width="Auto" Padding="6,0,0,0" Checked="chkDisconnect_Checked" Unchecked="chkDisconnect_Unchecked" Height="22"/>
            <CheckBox x:Name="chkBatteryLow" Content="{Binding Object10}" Margin="10,7,0,0" Grid.Row="7" Width="Auto" Padding="6,0,0,0" Height="22" Checked="chkDisconnect_Checked" Unchecked="chkDisconnect_Unchecked" />

            <CheckBox x:Name="chkOpenMeterDoor" Content="{Binding Object11}" Margin="10,10,0,0" Grid.Row="8" Width="Auto" Padding="6,0,0,0" Checked="chkDisconnect_Checked" Unchecked="chkDisconnect_Unchecked" Height="22"/>
            <CheckBox x:Name="chkOpenTerminalDoor" Content="{Binding Object12}" Margin="10,7,0,-2" Grid.Row="9" Width="Auto" Padding="6,0,0,0" Checked="chkDisconnect_Checked" Unchecked="chkDisconnect_Unchecked" Height="22"/>
            <CheckBox x:Name="chkHasCurrentWithoutVolt" Content="{Binding Object13}" Margin="10,7,0,0" Grid.Row="10" Width="Auto" Padding="6,0,0,0" Checked="chkDisconnect_Checked" Unchecked="chkDisconnect_Unchecked" Height="22"/>
            <Label x:Name="lblFromDate" Content="{Binding Object16}" HorizontalAlignment="Left" Height="30" Margin="7,5,0,0" Grid.Row="12" VerticalAlignment="Top"/>
            <Label x:Name="lblToDate" Content="{Binding Object17}" HorizontalAlignment="Left" Height="30" Margin="7,4,0,0" Grid.Row="13" VerticalAlignment="Top"/>
            <Custom:DatePicker Margin="71,6,10,7" x:Name="datePickerStarten" SelectedDateChanged="datePickerStart_SelectedDateChanged" Grid.Row="12" Width="141" Height="26"   />
            <Custom:DatePicker Margin="71,6,10,7" x:Name="datePickerEnden" Width="141" SelectedDateChanged="datePickerStart_SelectedDateChanged" Height="26" Grid.Row="13"   />
            <persianDateControls:PersianDatePicker  SelectedDate="{Binding SelectedDate, ElementName=datePicker, Converter={StaticResource dateToPersianDateConverter}, Mode=TwoWay}"  Background="{x:Static SystemColors.ControlLightLightBrush}" HorizontalAlignment="Left" Margin="71,5,0,0" x:Name="datePickerStart" VerticalAlignment="Top" Width="141" Height="24" Grid.Row="12"  />
            <persianDateControls:PersianDatePicker  SelectedDate="{Binding SelectedDate, ElementName=datePicker, Converter={StaticResource dateToPersianDateConverter}, Mode=TwoWay}"  Background="{x:Static SystemColors.ControlLightLightBrush}" HorizontalAlignment="Left" Margin="71,6,0,0" x:Name="datePickerEnd" VerticalAlignment="Top" Width="141" Height="24" Grid.Row="13"  />

            <CheckBox x:Name="chkDate" Content="{Binding Object18}" Margin="10,7,0,0" Grid.Row="11" Width="Auto" Padding="6,0,0,0" Height="22" Checked="chkDate_Checked" Unchecked="chkDate_Unchecked"/>
        </Grid>
    </Grid>
</Window>
