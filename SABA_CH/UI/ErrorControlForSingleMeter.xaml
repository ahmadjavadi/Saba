<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:Custom="http://schemas.microsoft.com/wpf/2008/toolkit"
        xmlns:SABA_CH="clr-namespace:SABA_CH" 
        xmlns:PersianDateControls="clr-namespace:Arash.PersianDateControls;assembly=PersianDateControls"
        xmlns:DataGridFilterLibrary="clr-namespace:DataGridFilterLibrary;assembly=DataGridFilterLibrary" 
        x:Class="SABA_CH.UI.ErrorControlForSingleMeter" FlowDirection="LeftToRight"
        Title="ErrorControlForSingleMeter" Height="494.118" Width="838.235" Activated="Window_Activated" Closing="Window_Closing" ShowInTaskbar="False" WindowStartupLocation="CenterOwner">
    <Window.Resources>
        <SABA_CH:DateTimeToPersianDateConverter x:Key="dateToPersianDateConverter"/>
    </Window.Resources>
    <Grid x:Name="GridMain" FlowDirection="RightToLeft">
    <StackPanel>
        <StackPanel.Background>
            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#FFD7E8FC" Offset="0" />
                <GradientStop Color="#FF95B7E8" Offset="1" />
                <GradientStop Color="#FF96B7E8" Offset="0.987"/>
            </LinearGradientBrush>
        </StackPanel.Background>
        <ToolBar FlowDirection="LeftToRight" x:Name="toolBar1" Margin="0,0,0,0">
            <ToolBar.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="White" Offset="0" />
                    <GradientStop Color="White" Offset="1" />
                </LinearGradientBrush>
            </ToolBar.Background>
            <Grid Background="White" Width="42">
                <Grid.RowDefinitions>
                    <RowDefinition Height="25*"/>
                    <RowDefinition Height="15*"/>
                </Grid.RowDefinitions>
                <Label Content="Refresh" Grid.Row="1" FontSize="8" Height="20" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontWeight="Bold"/>
                <Button  x:Name="ToolStripButtonRefresh" ToolTip="Refresh" Click="ToolStripButtonRefresh_Click" TabIndex="11" Background="{x:Null}">
                    <Image Source="/Saba;component/Image/refresh.png" Stretch="Fill" />
                </Button>
            </Grid>
            <Grid Background="White" Width="42">
                <Grid.RowDefinitions>
                    <RowDefinition Height="25*"/>
                    <RowDefinition Height="15*"/>
                </Grid.RowDefinitions>
                <Label Content="Excel" Grid.Row="1" FontSize="8" Height="20" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontWeight="Bold"/>
                <Button  x:Name="ToolStripButtonExport" ToolTip="Import From File"  TabIndex="12" Background="{x:Null}" Click="ToolStripButtonExport_Click">
                    <Image Source="/Saba;component/Image/application_vnd_ms_excel.ico" Stretch="Fill" />
                </Button>
            </Grid>
            <Separator Margin="5" />
        </ToolBar>
        <GroupBox>
            <DockPanel>
                <Label x:Name="lblFromDate" Content="از" HorizontalAlignment="Left" Height="30" Margin="10,3,0,0"  VerticalAlignment="Top"/>
                <PersianDateControls:PersianDatePicker  SelectedDate="{Binding SelectedDate, Converter={StaticResource dateToPersianDateConverter}, ElementName=datePicker, Mode=TwoWay}"  
                                                        Background="{x:Static SystemColors.ControlLightLightBrush}" 
                                                        HorizontalAlignment="Left" Margin="30,3,0,0" x:Name="datePickerStart" 
                                                        VerticalAlignment="Top" Width="141"    PreviewTextInput="datePickerStart_PreviewTextInput" />
                <Label x:Name="lblToDate" Content="{Binding Object17}" HorizontalAlignment="Left" Margin="100,3,0,10" />
                <PersianDateControls:PersianDatePicker  Background="{x:Static SystemColors.ControlLightLightBrush}" HorizontalAlignment="Left"
                    SelectedDate="{Binding SelectedDate, Converter={StaticResource dateToPersianDateConverter}, ElementName=datePicker, Mode=TwoWay}"  
                                                        Margin="30,3,0,0" 
                                                        x:Name="datePickerEnd" VerticalAlignment="Top" Width="141" Height="24"   
                                                        PreviewTextInput="datePickerEnd_PreviewTextInput"   />
                <Custom:DatePicker  x:Name="datePickerStarten" SelectedDateChanged="datePickerStart_SelectedDateChanged"  HorizontalAlignment="Left" 
                                    Margin="70,6,0,0" VerticalAlignment="Top" Width="141" Height="24" Grid.Row="1"    />
                <Custom:DatePicker x:Name="datePickerEnden"  SelectedDateChanged="datePickerStart_SelectedDateChanged" HorizontalAlignment="Left" 
                                   Margin="30,5,0,0"  VerticalAlignment="Top" Width="141" Height="24" Grid.Row="1"   />

            </DockPanel>
            
        </GroupBox>
        <ScrollViewer MaxHeight="450">
            <DataGrid 
			x:Name="DatagridGeneral"
			AutoGenerateColumns="False" AlternatingRowBackground="#FFBEBAE0"  IsReadOnly="True" Margin="0" Grid.Row="3" Background="White" SelectedIndex="0" BorderThickness="0.5" 
			>
                <!--<DataGrid.CellStyle>
                <Style TargetType="{x:Type DataGridCell}">
                    <Setter Property="Background">
                        <Setter.Value>
                            <MultiBinding
                Converter="{StaticResource converter}" >
                                <MultiBinding.Bindings>
                                    <Binding RelativeSource="{RelativeSource Self}"/>
                                    <Binding Path="." />
                                </MultiBinding.Bindings>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </Style>
            </DataGrid.CellStyle>-->
                <DataGrid.Columns >
                    <DataGridTextColumn Binding="{Binding MeterNumber}" Width="*" />
                    <DataGridTextColumn Binding="{Binding ReadDate}" Width="*" />
                    <DataGridTextColumn Binding="{Binding SourceTypeName}"  Width="*"/>
                    <DataGridCheckBoxColumn Binding="{Binding Disconnect}"  Width="*" ToolTipService.ToolTip="{Binding tr.TranslateofLable.Object5}">
                        <DataGridCheckBoxColumn.CellStyle>
                            <Style  TargetType="{x:Type DataGridCell}">
                                <Setter Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <CheckBox x:Name="cb"
											IsChecked="{Binding Disconnect, UpdateSourceTrigger=PropertyChanged}" 
											VerticalAlignment="Center" 
											HorizontalAlignment="Center" MouseDown="cb_MouseDown" IsHitTestVisible="False" />
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Disconnect, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                        <Setter Property="Background" Value="Orange"/>
                                    </DataTrigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="ToolTip" Value="{Binding Column.(ToolTipService.ToolTip), RelativeSource={RelativeSource Self}}"/>
                                    </Trigger>

                                </Style.Triggers>


                            </Style>

                        </DataGridCheckBoxColumn.CellStyle>
                    </DataGridCheckBoxColumn>
                    <DataGridCheckBoxColumn Binding="{Binding ExpiryDate}"  Width="*">
                        <DataGridCheckBoxColumn.CellStyle>
                            <Style  TargetType="{x:Type DataGridCell}">
                                <Setter Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <CheckBox x:Name="cb"
											IsChecked="{Binding ExpiryDate, UpdateSourceTrigger=PropertyChanged}" 
											VerticalAlignment="Center" 
											HorizontalAlignment="Center" MouseDown="cb_MouseDown" IsHitTestVisible="False" />
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ExpiryDate, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                        <Setter Property="Background" Value="Orange"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridCheckBoxColumn.CellStyle>
                    </DataGridCheckBoxColumn>

                    <DataGridCheckBoxColumn Binding="{Binding Overdrafts}"  Width="*">
                        <DataGridCheckBoxColumn.CellStyle>
                            <Style  TargetType="{x:Type DataGridCell}">
                                <Setter Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <CheckBox x:Name="cb"
											IsChecked="{Binding Overdrafts, UpdateSourceTrigger=PropertyChanged}" 
											VerticalAlignment="Center" 
											HorizontalAlignment="Center" MouseDown="cb_MouseDown" IsHitTestVisible="False" />
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Overdrafts, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                        <Setter Property="Background" Value="Orange"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridCheckBoxColumn.CellStyle>
                    </DataGridCheckBoxColumn>
                    <DataGridCheckBoxColumn Binding="{Binding HasCurrentWithDisconnect}"  Width="*">
                        <DataGridCheckBoxColumn.CellStyle>
                            <Style  TargetType="{x:Type DataGridCell}">
                                <Setter Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <CheckBox x:Name="cb"
											IsChecked="{Binding HasCurrentWithDisconnect, UpdateSourceTrigger=PropertyChanged}" 
											VerticalAlignment="Center" 
											HorizontalAlignment="Center" MouseDown="cb_MouseDown" IsHitTestVisible="False" />
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding HasCurrentWithDisconnect, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                        <Setter Property="Background" Value="Orange"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridCheckBoxColumn.CellStyle>
                    </DataGridCheckBoxColumn>
                    <DataGridCheckBoxColumn Binding="{Binding BaRand}"  Width="*">
                        <DataGridCheckBoxColumn.CellStyle>
                            <Style  TargetType="{x:Type DataGridCell}">
                                <Setter Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <CheckBox x:Name="cb"
											IsChecked="{Binding BaRand, UpdateSourceTrigger=PropertyChanged}" 
											VerticalAlignment="Center" 
											HorizontalAlignment="Center" MouseDown="cb_MouseDown" IsHitTestVisible="False" />
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding BaRand, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                        <Setter Property="Background" Value="Orange"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridCheckBoxColumn.CellStyle>
                    </DataGridCheckBoxColumn>
                    <DataGridCheckBoxColumn Binding="{Binding OpenMeterDoor}"  Width="*">
                        <DataGridCheckBoxColumn.CellStyle>
                            <Style  TargetType="{x:Type DataGridCell}">
                                <Setter Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <CheckBox x:Name="cb"
											IsChecked="{Binding OpenMeterDoor, UpdateSourceTrigger=PropertyChanged}" 
											VerticalAlignment="Center" 
											HorizontalAlignment="Center" MouseDown="cb_MouseDown" IsHitTestVisible="False" />
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding OpenMeterDoor, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                        <Setter Property="Background" Value="Orange"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridCheckBoxColumn.CellStyle>
                    </DataGridCheckBoxColumn>
                    <DataGridCheckBoxColumn Binding="{Binding OpenTerminalDoor}"  Width="*">
                        <DataGridCheckBoxColumn.CellStyle>
                            <Style  TargetType="{x:Type DataGridCell}">
                                <Setter Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <CheckBox x:Name="cb"
											IsChecked="{Binding OpenTerminalDoor, UpdateSourceTrigger=PropertyChanged}" 
											VerticalAlignment="Center" 
											HorizontalAlignment="Center" MouseDown="cb_MouseDown" IsHitTestVisible="False" />
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding OpenTerminalDoor, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                        <Setter Property="Background" Value="Orange"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridCheckBoxColumn.CellStyle>
                    </DataGridCheckBoxColumn>
                    <DataGridCheckBoxColumn Binding="{Binding HasCurrentWithoutVolt}"  Width="*">
                        <DataGridCheckBoxColumn.CellStyle>
                            <Style  TargetType="{x:Type DataGridCell}">
                                <Setter Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <CheckBox x:Name="cb"
											IsChecked="{Binding HasCurrentWithoutVolt, UpdateSourceTrigger=PropertyChanged}" 
											VerticalAlignment="Center" 
											HorizontalAlignment="Center" MouseDown="cb_MouseDown" IsHitTestVisible="False" />
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding HasCurrentWithoutVolt, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                        <Setter Property="Background" Value="Orange"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridCheckBoxColumn.CellStyle>
                    </DataGridCheckBoxColumn>
                    <DataGridCheckBoxColumn Binding="{Binding BatteryLow}"  Width="*">
                        <DataGridCheckBoxColumn.CellStyle>
                            <Style  TargetType="{x:Type DataGridCell}">
                                <Setter Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <CheckBox x:Name="cb"
											IsChecked="{Binding BatteryLow, UpdateSourceTrigger=PropertyChanged}" 
											VerticalAlignment="Center" 
											HorizontalAlignment="Center" MouseDown="cb_MouseDown" IsHitTestVisible="False" />
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding BatteryLow, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                        <Setter Property="Background" Value="Orange"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridCheckBoxColumn.CellStyle>
                    </DataGridCheckBoxColumn>
                    <DataGridCheckBoxColumn Binding="{Binding MeterError}"  Width="*">
                        <DataGridCheckBoxColumn.CellStyle>
                            <Style  TargetType="{x:Type DataGridCell}">
                                <Setter Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <CheckBox x:Name="cb"
											IsChecked="{Binding MeterError, UpdateSourceTrigger=PropertyChanged}" 
											VerticalAlignment="Center" 
											HorizontalAlignment="Center" MouseDown="cb_MouseDown" IsHitTestVisible="False" />
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding MeterError, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                        <Setter Property="Background" Value="Orange"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridCheckBoxColumn.CellStyle>
                    </DataGridCheckBoxColumn>
                </DataGrid.Columns>
            </DataGrid>
        </ScrollViewer>



        </StackPanel>
    </Grid>

</Window>
